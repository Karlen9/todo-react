{"version":3,"sources":["components/DeleteSelected/DeleteSelected.js","components/Filtering/Filtering.js","components/InputField/InputField.js","components/ListBlock/ListBlock.js","components/Sorting/Sorting.js","ToDoList.js","App.js","index.js"],"names":["DeleteSelected","props","className","onClick","handlerDeleteAllItems","value","Filtering","setStatus","InputField","TextField","onChange","handlerInputText","onKeyPress","type","autoComplete","id","label","variant","ListBlock","List","width","filteredTodos","map","todo","ListItem","ListItemIcon","Checkbox","checked","completed","e","handlerCheckingCheckBox","color","ListItemText","primary","text","IconButton","handlerCheckIsEditing","edge","aria-label","handlerDeleteItem","Sorting","Button","size","ToDoList","useState","inputText","setInputText","todos","setTodos","todoId","setTodoId","setFilteredTodos","status","handlerSubmitTodo","preventDefault","date","Date","toLocaleString","isEditing","useEffect","localStorage","getItem","setItem","JSON","stringify","todosLocal","parse","getLocalTodos","filter","key","target","alert","index","updatedTodos","completedTodo","find","console","log","el","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47c705fc.chunk.js","sourcesContent":["export default function DeleteSelected(props) {\r\n  \r\n  \r\n  return(\r\n    <div className=\"delete-section\">\r\n      <button className=\"button all-button\" onClick={() =>  props.handlerDeleteAllItems() } value=\"del-all\" >Delete all</button>\r\n\r\n    </div>\r\n  )\r\n}","import './Filtering.css';\r\n\r\nexport default function Filtering(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"selection-bar\">\r\n          <button className=\"button all-button\" onClick={() =>  props.setStatus(\"all\") } value=\"all\" >All</button>\r\n          <button className=\"button done-button\" onClick={() => props.setStatus(\"done\")} value=\"done\">Done</button>\r\n          <button className=\"button undone-button\" onClick={() => props.setStatus(\"undone\")} value=\"undone\">Undone</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}","import TextField from '@material-ui/core/TextField';\r\nimport './InputField.css';\r\n\r\nexport default function InputField(props) {  \r\n  return (\r\n    <div className=\"input\">\r\n      <TextField onChange={ props.handlerInputText } onKeyPress={ props.handlerInputText } type=\"text\" autoComplete= \"off\" className=\"main-input\" id=\"outlined-basic\" label=\"I want to...\" variant=\"outlined\"/>\r\n    </div>\r\n  );\r\n}\r\n","import List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport './ListBlock.css';\r\n\r\nexport default function ListBlock(props) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List width=\"100%\">\r\n      { props.filteredTodos.map((todo) => (\r\n        <ListItem key={todo.id} >\r\n          <ListItemIcon>\r\n            <Checkbox checked={todo.completed} onClick={ (e) => props.handlerCheckingCheckBox(e, todo.id)} color=\"primary\"/>\r\n          </ListItemIcon>\r\n          <ListItemText primary={todo.text} />\r\n         \r\n          <IconButton onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}  edge=\"end\" aria-label=\"comments\">\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton onClick={ (e) => props.handlerDeleteItem(e, todo.id) }  edge=\"end\" aria-label=\"comments\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItem>\r\n        )) }\r\n      </List>\r\n      </div>\r\n  );\r\n}","import Button from '@material-ui/core/Button';\r\nimport { ImArrowUp } from 'react-icons/im';\r\nimport { ImArrowDown } from 'react-icons/im';\r\nimport './Sorting.css';\r\n\r\nexport default function Sorting(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"sort\">\r\n          <h3>Sort by Date</h3>\r\n          <div className=\"arrows\">\r\n            <Button variant=\"contained\">\r\n              <ImArrowUp className=\"up-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n            <Button variant=\"contained\">\r\n              <ImArrowDown className=\"down-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","//imports\nimport React, { useEffect, useState } from 'react';\nimport DeleteSelected from './components/DeleteSelected/DeleteSelected';\nimport Filtering from './components/Filtering/Filtering';\nimport InputField from './components/InputField/InputField';\nimport ListBlock from './components/ListBlock/ListBlock';\nimport Sorting from './components/Sorting/Sorting';\nimport './ToDoList.css';\n\nexport default function ToDoList() {\n  const [inputText, setInputText] = useState('');\n  const [editInput, setEditInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [todoId, setTodoId] = useState(0);\n  const [filteredTodos, setFilteredTodos] = useState([...todos]);\n  const [status, setStatus] = useState(\"all\");\n\n  const handlerInputText = (e) => {\n    if(e.key === \"Enter\") {\n      if(e.target.value === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        handlerSubmitTodo(e);\n        setInputText('');\n        e.target.value = '';\n      }\n    }\n    else {\n      setInputText(e.target.value);\n    }\n  };\n\n  const handlerSubmitTodo = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos, { text: inputText, completed: false, id: todoId, date: new Date().toLocaleString(), isEditing: false} \n    ]);\n    setTodoId(todoId + 1);\n    setStatus(\"all\");\n  };\n\n  const handlerDeleteItem = (e, index) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    updatedTodos = updatedTodos.filter( el => el.id !== index);\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerCheckingCheckBox = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    completedTodo.completed = e.target.checked;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerDeleteAllItems = () => {\n    setTodos([]);\n\n  };\n\n\n  const handlerFilterTodos = () => {\n    if (status === \"all\") {\n      setFilteredTodos([...todos]);\n    } else if (status === \"done\") {\n      setFilteredTodos([...todos.filter(e => e.completed === true)]);\n    } else if (status === \"undone\") {\n      setFilteredTodos([...todos.filter(e => e.completed === false)]);\n    }\n  };\n\n  // const handlerEditTodoItem = (e) => {\n  //   let updatedTodos = [...todos];\n  //   const completedTodo = updatedTodos.find(e => e.isEditing === true);\n  //   completedTodo.text = \n  // }\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };  \n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todosLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todosLocal);\n    }\n  };\n\n  const handlerCheckIsEditing = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    completedTodo.isEditing = true;\n    console.log(completedTodo.isEditing);\n    setTodos([...updatedTodos]);\n  };\n\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    handlerFilterTodos();\n    saveLocalTodos();\n  }, [todos, status]);\n  \n  return (\n    <section className=\"main-section\">\n      <h1>ToDo</h1>\n      <InputField\n        handlerInputText = {handlerInputText}\n        inputText= {inputText}\n      />\n      <div className=\"wrapper\">\n        <Filtering \n          setStatus = {setStatus}\n        />\n        <Sorting />\n      </div>\n      <ListBlock \n        handlerCheckIsEditing = {handlerCheckIsEditing} \n        handlerCheckingCheckBox = {handlerCheckingCheckBox}\n        handlerDeleteItem = {handlerDeleteItem}\n        filteredTodos = {filteredTodos}\n      />     \n      <DeleteSelected \n        handlerDeleteAllItems={handlerDeleteAllItems}\n      />\n    </section> \n  );\n}\n \n","import ToDoList from './ToDoList';\n\nexport default function App() {  \n  return (\n    <div className=\"App\">\n       <ToDoList/>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}