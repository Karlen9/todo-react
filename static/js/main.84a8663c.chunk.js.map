{"version":3,"sources":["components/DeleteSelected/DeleteSelected.js","components/Filtering/Filtering.js","components/InputField/InputField.js","components/ListBlock/ListBlock.js","components/Sorting/Sorting.js","ToDoList.js","App.js","index.js"],"names":["DeleteSelected","props","className","onClick","handlerDeleteAllItems","value","Filtering","setStatus","InputField","TextField","onChange","handlerInputText","onKeyPress","type","autoComplete","id","label","variant","ListBlock","List","width","filteredTodos","map","todo","ListItem","ListItemIcon","Checkbox","checked","completed","e","handlerCheckingCheckBox","color","ListItemText","primary","text","isEditing","handlerEditText","IconButton","handlerCheckIsEditing","edge","aria-label","handlerDeleteItem","Sorting","Button","size","ToDoList","useState","inputText","setInputText","editInput","setEditInput","todos","setTodos","todoId","setTodoId","setFilteredTodos","status","inputVisible","setInputVisible","handlerSubmitTodo","preventDefault","date","Date","toLocaleString","handleChangeItemText","index","updatedTodos","completedTodo","find","useEffect","localStorage","getItem","setItem","JSON","stringify","todosLocal","parse","getLocalTodos","filter","key","target","trim","alert","console","log","el","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84a8663c.chunk.js","sourcesContent":["export default function DeleteSelected(props) {\r\n  \r\n  \r\n  return(\r\n    <div className=\"delete-section\">\r\n      <button className=\"button all-button\" onClick={() =>  props.handlerDeleteAllItems() } value=\"del-all\" >Delete all</button>\r\n\r\n    </div>\r\n  )\r\n}","import './Filtering.css';\r\n\r\nexport default function Filtering(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"selection-bar\">\r\n          <button className=\"button all-button\" onClick={() =>  props.setStatus(\"all\") } value=\"all\" >All</button>\r\n          <button className=\"button done-button\" onClick={() => props.setStatus(\"done\")} value=\"done\">Done</button>\r\n          <button className=\"button undone-button\" onClick={() => props.setStatus(\"undone\")} value=\"undone\">Undone</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}","import TextField from '@material-ui/core/TextField';\r\nimport './InputField.css';\r\n\r\nexport default function InputField(props) {  \r\n  return (\r\n    <div className=\"input\">\r\n      <TextField onChange={ props.handlerInputText } onKeyPress={ props.handlerInputText } type=\"text\" autoComplete= \"off\" className=\"main-input\" id=\"outlined-basic\" label=\"I want to...\" variant=\"outlined\"/>\r\n    </div>\r\n  );\r\n}\r\n","import List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport EditInput from '../../components/EditInput/EditInput';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//import ToDoList from '../../ToDoList';\r\nimport './ListBlock.css';\r\n\r\nexport default function ListBlock(props) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List width=\"100%\">\r\n      { props.filteredTodos.map((todo) => (\r\n        <ListItem key={todo.id} >\r\n          <ListItemIcon>\r\n            <Checkbox checked={todo.completed} onClick={ (e) => props.handlerCheckingCheckBox(e, todo.id)} color=\"primary\"/>\r\n          </ListItemIcon>\r\n          <ListItemText primary={todo.text} />\r\n          { todo.isEditing ? <TextField className=\"edit-input\" onChange={ (e) => props.handlerEditText(e) } onKeyPress={ (e) => {props.handlerEditText(e, todo.id); }}/> : null }\r\n          <IconButton onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}  edge=\"end\" aria-label=\"comments\">\r\n            <EditOutlinedIcon onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}/>  \r\n          </IconButton>\r\n          <IconButton onClick={ (e) => props.handlerDeleteItem(e, todo.id) }  edge=\"end\" aria-label=\"comments\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItem>\r\n        )) }\r\n      </List>\r\n      </div>\r\n  );\r\n}","import Button from '@material-ui/core/Button';\r\nimport { ImArrowUp } from 'react-icons/im';\r\nimport { ImArrowDown } from 'react-icons/im';\r\nimport './Sorting.css';\r\n\r\nexport default function Sorting(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"sort\">\r\n          <h3>Sort by Date</h3>\r\n          <div className=\"arrows\">\r\n            <Button variant=\"contained\">\r\n              <ImArrowUp className=\"up-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n            <Button variant=\"contained\">\r\n              <ImArrowDown className=\"down-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","//imports\nimport { VerifiedUserRounded } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\nimport DeleteSelected from './components/DeleteSelected/DeleteSelected';\nimport Filtering from './components/Filtering/Filtering';\nimport InputField from './components/InputField/InputField';\nimport ListBlock from './components/ListBlock/ListBlock';\nimport Sorting from './components/Sorting/Sorting';\nimport './ToDoList.css';\n\nexport default function ToDoList() {\n  const [inputText, setInputText] = useState('');\n  const [editInput, setEditInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [todoId, setTodoId] = useState(0);\n  const [filteredTodos, setFilteredTodos] = useState([...todos]);\n  const [status, setStatus] = useState(\"all\");\n  const [inputVisible, setInputVisible] = useState(false);\n\n  const handlerInputText = (e, index) => {\n    if(e.key === \"Enter\") {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        handlerSubmitTodo(e);\n        setInputText('');\n        e.target.value = '';\n      }\n    }\n    else {\n      setInputText(e.target.value);\n    }\n  };\n\n  const handlerEditText = (e, index) => {\n    if(e.key === \"Enter\") {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        setEditInput('');\n        handleChangeItemText(e, index);\n        e.target.value = '';\n      }\n    }\n    else {\n      setEditInput(e.target.value);\n    }\n  }; \n\n  const handlerSubmitTodo = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos, { text: inputText, completed: false, id: todoId, date: new Date().toLocaleString(), isEditing: false} \n    ]);\n    setTodoId(todoId + 1);\n    setStatus(\"all\");\n  };\n\n  const handlerDeleteItem = (e, index) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    updatedTodos = updatedTodos.filter( el => el.id !== index);\n    setTodos([...updatedTodos]);\n  };\n\n  const handleChangeItemText = (e, index) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find((e) => e.id === index);\n    completedTodo.text = editInput;\n    completedTodo.isEditing = false;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerCheckingCheckBox = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    completedTodo.completed = e.target.checked;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerDeleteAllItems = () => {\n    setTodos([]);\n\n  };\n\n\n  const handlerFilterTodos = () => {\n    if (status === \"all\") {\n      setFilteredTodos([...todos]);\n    } else if (status === \"done\") {\n      setFilteredTodos([...todos.filter(e => e.completed === true)]);\n    } else if (status === \"undone\") {\n      setFilteredTodos([...todos.filter(e => e.completed === false)]);\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };  \n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todosLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todosLocal);\n    }\n  };\n\n  const handlerCheckIsEditing = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    console.log(inputVisible);\n    completedTodo.isEditing = true;\n    console.log(completedTodo.isEditing);\n    setTodos([...updatedTodos]);\n    setInputVisible(true);\n    console.log(inputVisible);\n  };  \n\n\n\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  \n  useEffect(() => {\n    handlerFilterTodos();\n    saveLocalTodos();\n  }, [todos, status]);\n  \n  return (\n    <section className=\"main-section\">\n      <h1>ToDo</h1>\n      <InputField\n        handlerInputText = {handlerInputText}\n        inputText= {inputText}\n      />\n      <div className=\"wrapper\">\n        <Filtering \n          setStatus = {setStatus}\n        />\n        <Sorting />\n      </div>\n      <ListBlock \n        handlerCheckIsEditing = {handlerCheckIsEditing} \n        handlerCheckingCheckBox = {handlerCheckingCheckBox}\n        handlerDeleteItem = {handlerDeleteItem}\n        filteredTodos = {filteredTodos}\n        inputVisible={inputVisible}\n        handlerEditText={handlerEditText}\n        handleChangeItemText={handleChangeItemText}\n        \n      />     \n      <DeleteSelected \n        handlerDeleteAllItems={handlerDeleteAllItems}\n      />\n    </section> \n  );\n}\n \n","import ToDoList from './ToDoList';\n\nexport default function App() {  \n  return (\n    <div className=\"App\">\n       <ToDoList/>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}