{"version":3,"sources":["components/DeleteSelected/DeleteSelected.js","components/Filtering/Filtering.js","components/InputField/InputField.js","components/ListBlock/ListBlock.js","components/Sorting/Sorting.js","components/Pages/Pages.js","ToDoList.js","App.js","index.js"],"names":["DeleteSelected","props","className","onClick","e","handlerDeleteSelectedItems","handlerDeleteAllItems","value","Filtering","setStatus","InputField","TextField","onChange","handlerInputText","onKeyPress","type","autoComplete","id","label","variant","ListBlock","List","width","filteredTodos","map","todo","ListItem","ListItemIcon","Checkbox","checked","completed","handlerCheckingCheckBox","color","ListItemText","primary","text","isEditing","onKeyDown","handlerEscapeEdition","handlerEditText","date","toLocaleString","IconButton","handlerCheckIsEditing","edge","aria-label","handlerDeleteItem","Sorting","Button","handlerSortDateToUp","size","handlerSortDateToDown","Pages","handlerPageChange","amountOfPages","handlerPageCount","Pagination","count","ToDoList","useState","inputText","setInputText","editInput","setEditInput","todos","setTodos","todoId","setTodoId","setFilteredTodos","status","inputVisible","setInputVisible","isEmpty","setIsEmpty","currPage","setCurrPage","setAmountOfPages","handlerSubmitTodo","preventDefault","Date","handleChangeItemText","index","updatedTodos","completedTodo","find","handlerFilterTodos","page","cPage","slice","filter","handlerPageCounter","stat","Math","ceil","length","console","log","useEffect","key","target","trim","alert","sort","a","b","aTime","element","prevElement","el","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.524611ea.chunk.js","sourcesContent":["import './deleteSelected.css';\r\n\r\n\r\nexport default function DeleteSelected(props) {\r\n  \r\n  \r\n  return(\r\n    <div className=\"delete-section\">\r\n      <button className=\"button selected-button\" onClick={ (e) => props.handlerDeleteSelectedItems(e)}>Delete select</button>\r\n      <button className=\"button all-button\" onClick={() =>  props.handlerDeleteAllItems() } value=\"del-all\" >Delete all</button>\r\n    </div>\r\n  )\r\n}","import './Filtering.css';\r\n\r\nexport default function Filtering(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"selection-bar\">\r\n          <button className=\"button all-button\" onClick={() =>  props.setStatus(\"all\") } value=\"all\" >All</button>\r\n          <button className=\"button done-button\" onClick={() => props.setStatus(\"done\")} value=\"done\">Done</button>\r\n          <button className=\"button undone-button\" onClick={() => props.setStatus(\"undone\")} value=\"undone\">Undone</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}","import TextField from '@material-ui/core/TextField';\r\nimport './inputfield.css';\r\n\r\nexport default function InputField(props) {  \r\n  return (\r\n    <div className=\"input\">\r\n      <TextField onChange={ props.handlerInputText } onKeyPress={ props.handlerInputText } type=\"text\" autoComplete= \"off\" className=\"main-input\" id=\"outlined-basic\" label=\"I want to...\" variant=\"outlined\"/>\r\n    </div>\r\n  );\r\n}\r\n","import List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport EditInput from '../../components/EditInput/EditInput';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//import ToDoList from '../../ToDoList';\r\nimport './listblock.css';\r\n\r\nexport default function ListBlock(props) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List width=\"100%\">\r\n      { props.filteredTodos.map((todo) => (\r\n        <ListItem key={todo.id} >\r\n          <ListItemIcon>\r\n            <Checkbox checked={todo.completed} onClick={ (e) => props.handlerCheckingCheckBox(e, todo.id)} color=\"primary\"/>\r\n          </ListItemIcon>\r\n          <ListItemText primary={todo.text} />\r\n          { todo.isEditing ? <TextField className=\"edit-input\" onKeyDown={(e) => props.handlerEscapeEdition(e, todo.id)} onChange={ (e) => props.handlerEditText(e) } onKeyPress={ (e) => {props.handlerEditText(e, todo.id); }}/> : null }\r\n          <p className=\"date\">{todo.date.toLocaleString()}</p>\r\n          <IconButton onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}  edge=\"end\" aria-label=\"comments\">\r\n            <EditOutlinedIcon onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}/>  \r\n          </IconButton>\r\n          <IconButton onClick={ (e) => props.handlerDeleteItem(e, todo.id) }  edge=\"end\" aria-label=\"comments\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItem>\r\n        )) }\r\n      </List>\r\n      </div>\r\n  );\r\n}","import Button from '@material-ui/core/Button';\r\nimport { ImArrowUp } from 'react-icons/im';\r\nimport { ImArrowDown } from 'react-icons/im';\r\nimport './sorting.css';\r\n\r\nexport default function Sorting(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"sort\">\r\n          <h3>Sort by Dаte</h3>\r\n          <div className=\"arrows\">\r\n            <Button onClick={() => props.handlerSortDateToUp()} variant=\"contained\">\r\n              <ImArrowUp className=\"up-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n            <Button onClick={() => props.handlerSortDateToDown()}variant=\"contained\">\r\n              <ImArrowDown className=\"down-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import './pages.css';\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nexport default function Pages({handlerPageChange, handlerPageCount, amountOfPages}) {\r\n  return (\r\n    <Pagination \r\n      onChange={handlerPageChange}\r\n      count={amountOfPages}\r\n    />\r\n  )\r\n}","//imports\nimport React, { useEffect, useState } from 'react';\nimport DeleteSelected from './components/DeleteSelected/DeleteSelected';\nimport Filtering from './components/Filtering/Filtering';\nimport InputField from './components/InputField/InputField';\nimport ListBlock from './components/ListBlock/ListBlock';\nimport Sorting from './components/Sorting/Sorting';\nimport Pages from './components/Pages/Pages';\nimport './ToDoList.css';\n\nexport default function ToDoList() {\n  const [inputText, setInputText] = useState('');\n  const [editInput, setEditInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [todoId, setTodoId] = useState(0);\n  const [filteredTodos, setFilteredTodos] = useState([...todos]);\n  const [status, setStatus] = useState(\"all\");\n  const [inputVisible, setInputVisible] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [currPage, setCurrPage] = useState(1);\n  const [amountOfPages, setAmountOfPages] = useState(1);\n\n  const handlerInputText = (e) => {\n    if(e.key === \"Enter\") {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        handlerSubmitTodo(e);\n        setInputText('');\n        e.target.value = '';\n      }\n    }\n    else {\n      setInputText(e.target.value);\n    }\n  };\n\n  const handlerEditText = (e, index) => {\n    if(e.key === \"Enter\") {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        setEditInput('');\n        handleChangeItemText(e, index);\n        e.target.value = '';\n      }\n    }\n    else {\n      setEditInput(e.target.value);\n    }\n  };\n\n  const handlerEscapeEdition = (e, index) => {\n    if(e.key === \"Escape\") {\n      let updatedTodos = [...todos];\n      e.preventDefault();\n      setEditInput(inputText);\n      const element = updatedTodos.find(e => e.id === index);\n      const prevElement = todos.find( e => e.id === index);\n      element.text = prevElement.text;\n      element.isEditing = false;\n    }\n  }\n\n  const handlerSubmitTodo = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos, { text: inputText, completed: false, id: todoId, date: new Date(), isEditing: false} \n    ]);\n    setTodoId(todoId + 1);\n    setStatus(\"all\");\n    \n  };\n\n  const handlerSetEmptiness = () => {\n    if (todos.length === 0) {\n      setIsEmpty(true);\n      console.log(isEmpty);\n    } else if (todos !== 0){\n      setIsEmpty(false);\n      console.log(isEmpty);\n    }\n  };\n\n  const handlerDeleteItem = (e, index) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    updatedTodos = updatedTodos.filter( el => el.id !== index);\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerSortDateToUp = () => {\n    filteredTodos.sort((a, b) => {\n      const aTime = a.date;\n      const bTime = b.date;\n      return aTime - bTime;\n    });\n  };\n\n  const handlerSortDateToDown = () => {\n    filteredTodos.sort((a, b) => {\n      const aTime = a.date;\n      const bTime = b.date;\n      return bTime - aTime;\n    });\n\n  };\n\n  const handleChangeItemText = (e, index) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find((e) => e.id === index);\n    completedTodo.text = editInput;\n    completedTodo.isEditing = false;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerCheckingCheckBox = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    completedTodo.completed = e.target.checked;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerDeleteAllItems = () => {\n    setTodos([]);\n  };\n\n  const handlerDeleteSelectedItems = (e) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    updatedTodos = updatedTodos.filter(e => e.completed === false);\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerFilterTodos = (status, page) => {\n    const cPage = page - 1;\n    switch(status) {\n      case \"all\":\n        setFilteredTodos([...todos.slice(cPage * 5, cPage * 5 + 5)]);\n        setStatus(\"all\");\n\n        break;\n      case \"done\":\n        setFilteredTodos([...todos.filter(e => e.completed === true).slice(cPage * 5, cPage * 5 + 5)]);\n        setStatus(\"done\");\n        handlerFilterTodos();\n\n        break;\n      case \"undone\":\n        setFilteredTodos([...todos.filter(e => e.completed === false).slice(cPage * 5, cPage * 5 + 5)]);\n        setStatus(\"undone\");\n        handlerFilterTodos();\n\n        break;\n    }\n  };\n\n  const handlerCheckIsEditing = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    console.log(inputVisible);\n    completedTodo.isEditing = true;\n    console.log(completedTodo.isEditing);\n    setTodos([...updatedTodos]);\n    setInputVisible(true);\n    console.log(inputVisible);\n  };  \n\n  const handlerPageCounter = (stat) => {\n    switch(stat) {\n      case \"all\":\n        setAmountOfPages(Math.ceil(todos.length / 5));\n        console.log(amountOfPages);\n        break;\n      case \"done\":\n        setAmountOfPages(Math.ceil(todos.filter(e => e.completed === true).length / 5));\n        break;\n      case \"undone\":\n        setAmountOfPages(Math.ceil(todos.filter(e => e.completed === false).length / 5));\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handlerPageChange = (e, page) => {\n    setCurrPage(page);\n  };\n\n    //localStorage\n  \n  // const saveLocalTodos = () => {\n  //   localStorage.setItem(\"todos\", JSON.stringify(todos));\n  // };  //\n\n  // const getLocalTodos = () => {\n  //   if (localStorage.getItem(\"todos\") === null) {\n  //     localStorage.setItem(\"todos\", JSON.stringify([]));\n  //   } else {\n  //     let todosLocal = JSON.parse(localStorage.getItem(\"todos\"));\n  //     setTodos(todosLocal);\n  //   }\n  // };\n\n\n  // useEffect(() => {\n  //   //getLocalTodos();\n  // }, []);\n\n  \n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n    //saveLocalTodos();\n  }, [todos, status]);\n\n\n  useEffect(() => {\n    handlerSetEmptiness();\n  }, [todos]);\n\n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n  }, [currPage]);\n\n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n    setCurrPage(1);\n\n  }, [status]);\n\n  useEffect(() => {\n    handlerPageCounter(status);\n  }, [status, todos]);\n  \n  return (\n    <section className=\"main-section\">\n      <h1>ToDo</h1>\n      <InputField\n        handlerInputText = {handlerInputText}\n        inputText= {inputText}\n      />\n      { !isEmpty ? <div className=\"wrapper\">\n        <Filtering \n          setStatus = {setStatus}\n        />\n        <Sorting handlerSortDateToUp={handlerSortDateToUp} handlerSortDateToDown={handlerSortDateToDown}/>\n      </div> : null}\n      \n      <ListBlock \n        handlerEscapeEdition={handlerEscapeEdition}\n        handlerCheckIsEditing = {handlerCheckIsEditing} \n        handlerCheckingCheckBox = {handlerCheckingCheckBox}\n        handlerDeleteItem = {handlerDeleteItem}\n        filteredTodos = {filteredTodos}\n        inputVisible={inputVisible}\n        handlerEditText={handlerEditText}\n        handleChangeItemText={handleChangeItemText}\n        \n      />  \n\n      { !isEmpty ? <Pages\n        handlerPageCounter={handlerPageCounter}\n        handlerPageChange={handlerPageChange}\n        amountOfPages={amountOfPages}\n      /> : null }\n\n      { !isEmpty ? <div className=\"delete-main-section\">\n        <DeleteSelected \n          handlerDeleteAllItems={handlerDeleteAllItems}\n          handlerDeleteSelectedItems={handlerDeleteSelectedItems}\n        />\n      </div> : null}\n       \n    </section> \n  );\n}\n \n","import ToDoList from './ToDoList';\n\nexport default function App() {  \n  return (\n    <div className=\"App\">\n       <ToDoList/>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}