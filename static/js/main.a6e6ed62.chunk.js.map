{"version":3,"sources":["components/Filtering/Filtering.js","components/InputField/InputField.js","components/ListBlock/ListBlock.js","components/Sorting/Sorting.js","components/Pages/Pages.js","ToDoList.js","App.js","index.js"],"names":["Filtering","props","className","onClick","setStatus","value","InputField","TextField","onChange","handlerInputText","onKeyPress","type","autoComplete","id","label","variant","ListBlock","List","width","todos","map","todo","ListItem","ListItemIcon","Checkbox","checked","done","e","handlerCheckingCheckBox","color","ListItemText","primary","name","onDoubleClick","setIsEdit","isEdit","onKeyDown","handlerEscapeEdition","handlerEditText","createdAt","split","IconButton","handlerDeleteItem","edge","aria-label","Sorting","Button","setSortTrigger","size","Pages","handlerPageChange","amountOfPages","Pagination","count","ToDoList","useState","inputText","setInputText","editInput","setEditInput","setTodos","status","currPage","setCurrPage","setAmountOfPages","sortTrigger","errMessage","setErrMessage","isError","setIsError","REST_API_URL","process","REST_API_URL_GET","getItem","sort","filter","pagination","a","axios","get","params","order","filterBy","page","data","Math","ceil","rows","item","patch","handlerSubmitTodo","post","console","log","postItemRequest","handleChangeItemText","index","editItemText","find","interceptors","response","use","error","errors","Promise","reject","useEffect","key","target","trim","Error","preventDefault","message","updatedTodos","element","prevElement","text","blur","task","editItemDone","deletingItem","delete","deleteItem","focus","Snackbar","open","onClose","autoHideDuration","Alert","severity","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6e6ed62.chunk.js","sourcesContent":["import \"./filtering.css\";\n\nexport default function Filtering(props) {\n  return (\n    <div>\n      <div className=\"selection-bar\">\n        <button\n          className=\"button all-button\"\n          onClick={() => props.setStatus(null)}\n          value=\"all\"\n        >\n          All\n        </button>\n        <button\n          className=\"button done-button\"\n          onClick={() => props.setStatus(true)}\n          value=\"done\"\n        >\n          Done\n        </button>\n        <button\n          className=\"button undone-button\"\n          onClick={() => props.setStatus(false)}\n          value=\"undone\"\n        >\n          Undone\n        </button>\n      </div>\n    </div>\n  );\n}\n","import TextField from '@material-ui/core/TextField';\nimport './inputfield.css';\n\nexport default function InputField(props) {  \n  return (\n    <div className=\"input\">\n      <TextField onChange={ props.handlerInputText } onKeyPress={ props.handlerInputText } type=\"text\" autoComplete= \"off\" className=\"main-input\" id=\"outlined-basic\" label=\"I want to...\" variant=\"outlined\"/>\n    </div>\n  );\n}\n","import List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"./listblock.css\";\n\nexport default function ListBlock(props) {\n  return (\n    <div className=\"list\">\n      <List width=\"100%\">\n        {props.todos.map((todo) => (\n          <ListItem key={todo.id}>\n            <ListItemIcon>\n              <Checkbox\n                checked={todo.done}\n                onClick={(e) => props.handlerCheckingCheckBox(e, todo.id)}\n                color=\"primary\"\n              />\n            </ListItemIcon>\n            <ListItemText\n              primary={todo.name}\n              onDoubleClick={() => {\n                props.setIsEdit(todo.id);\n              }}\n            />\n            {props.isEdit === todo.id ? (\n              <TextField\n                className=\"edit-input\"\n                onKeyDown={(e) => props.handlerEscapeEdition(e, todo.id)}\n                onChange={(e) => props.handlerEditText(e)}\n                onKeyPress={(e) => {\n                  props.handlerEditText(e, todo.id);\n                }}\n              />\n            ) : null}\n\n            {<p className=\"date\">{todo.createdAt.split(\"T\")[0]}</p>}\n            <IconButton\n              onClick={(e) => props.handlerDeleteItem(todo.id)}\n              edge=\"end\"\n              aria-label=\"comments\"\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n","import Button from \"@material-ui/core/Button\";\nimport { ImArrowUp } from \"react-icons/im\";\nimport { ImArrowDown } from \"react-icons/im\";\nimport \"./sorting.css\";\n\nexport default function Sorting(props) {\n  return (\n    <div>\n      <div className=\"sort\">\n        <h3>Sort by Dаte</h3>\n        <div className=\"arrows\">\n          <Button\n            onClick={() => props.setSortTrigger(\"asc\")}\n            variant=\"contained\"\n          >\n            <ImArrowUp className=\"up-arrow\" size=\"1rem\" />\n          </Button>\n          <Button\n            onClick={() => props.setSortTrigger(\"desc\")}\n            variant=\"contained\"\n          >\n            <ImArrowDown className=\"down-arrow\" size=\"1rem\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import './pages.css';\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nexport default function Pages({handlerPageChange, amountOfPages}) {\n  return (\n    <Pagination \n      onChange={handlerPageChange}\n      count={amountOfPages}\n    />\n  )\n}","//imports\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Filtering from \"./components/Filtering/Filtering\";\nimport InputField from \"./components/InputField/InputField\";\nimport ListBlock from \"./components/ListBlock/ListBlock\";\nimport Sorting from \"./components/Sorting/Sorting\";\nimport Pages from \"./components/Pages/Pages\";\nimport { Snackbar } from \"@material-ui/core\";\nimport \"./ToDoList.css\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport default function ToDoList() {\n  const [inputText, setInputText] = useState(\"\");\n  const [editInput, setEditInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [currPage, setCurrPage] = useState(1);\n  const [amountOfPages, setAmountOfPages] = useState(1);\n  const [sortTrigger, setSortTrigger] = useState(\"asc\");\n  const [errMessage, setErrMessage] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [isEdit, setIsEdit] = useState(\"\");\n\n  const REST_API_URL = process.env.REACT_APP_BASE_HEROKU;\n  const REST_API_URL_GET = process.env.REACT_APP_GET_HEROKU;\n\n  async function getItem(sort, filter, pagination) {\n    const { data } = await axios.get(REST_API_URL_GET, {\n      params: {\n        order: sort,\n        filterBy: filter,\n        page: pagination,\n      },\n    });\n\n    setAmountOfPages(Math.ceil(data.count / 5));\n    setTodos([...data.rows]);\n  }\n\n  async function editItemText(item) {\n    await axios.patch(REST_API_URL + \"/\" + item.id, {\n      name: editInput,\n    });\n    getItem(sortTrigger, status, currPage);\n  }\n\n  async function editItemDone(item) {\n    await axios.patch(REST_API_URL + \"/\" + item.id, {\n      done: item.done,\n    });\n    getItem(sortTrigger, status, currPage);\n  }\n\n  const handlerInputText = (e) => {\n    if (e.key === \"Enter\") {\n      try {\n        if (e.target.value.trim() === \"\") {\n          e.target.value = \"\";\n          throw new Error(\"Write some task\");\n        } else {\n          e.preventDefault();\n          handlerSubmitTodo(e);\n          setInputText(\"\");\n          e.target.value = \"\";\n        }\n      } catch (error) {\n        setErrMessage(error.message);\n        setIsError(true);\n      }\n    } else {\n      setInputText(e.target.value);\n    }\n  };\n\n  const handlerEditText = (e, index) => {\n    if (e.key === \"Enter\") {\n      try {\n        if (e.target.value.trim() === \"\") {\n          e.target.value = \"\";\n          throw new Error(\"Write some task\");\n        } else {\n          e.preventDefault();\n          setEditInput(\"\");\n          handleChangeItemText(e, index);\n          e.target.value = \"\";\n          e.target.focus();\n          setIsEdit(\"\");\n          getItem(sortTrigger, status, currPage);\n        }\n      } catch (error) {\n        setErrMessage(error.message);\n        setIsError(true);\n      }\n    } else {\n      setEditInput(e.target.value);\n    }\n  };\n\n  const handlerEscapeEdition = (e, index) => {\n    if (e.key === \"Escape\") {\n      let updatedTodos = [...todos];\n      e.preventDefault();\n      setEditInput(inputText);\n      const element = updatedTodos.find((e) => e.id === index);\n      const prevElement = todos.find((e) => e.id === index);\n      element.text = prevElement.text;\n      e.target.value = \"\";\n      e.target.blur();\n      setIsEdit(\"\");\n    }\n  };\n\n  const handlerSubmitTodo = (e) => {\n    async function postItemRequest() {\n      const todo = { name: inputText, done: false };\n      await axios.post(REST_API_URL, todo);\n      getItem(sortTrigger, status, currPage);\n      console.log(\"posted\");\n    }\n    postItemRequest();\n  };\n\n  const handleChangeItemText = (e, index) => {\n    const editingItem = todos.find((e) => e.id === index);\n\n    editItemText(editingItem);\n    getItem(sortTrigger, status, currPage);\n  };\n\n  const handlerCheckingCheckBox = (item, index) => {\n    const task = todos.find((e) => e.id === index);\n    task.done = item.target.checked;\n    editItemDone(task);\n    getItem(sortTrigger, status, currPage);\n  };\n\n  const handlerDeleteItem = (index) => {\n    const deletingItem = todos.find((todo) => todo.id === index);\n\n    async function deleteItem() {\n      await axios.delete(REST_API_URL + \"/\" + deletingItem.id);\n      getItem(sortTrigger, status, currPage);\n    }\n\n    deleteItem();\n  };\n\n  const handlerPageChange = (e, page) => {\n    setCurrPage(page);\n  };\n\n  axios.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      if (error) {\n        setErrMessage(error.response.data.errors || error.response.data.error);\n        setIsError(true);\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    getItem(sortTrigger, status, currPage);\n  }, [currPage, status, amountOfPages, sortTrigger]);\n\n  return (\n    <section className=\"main-section\">\n      <h1>ToDo List</h1>\n      <InputField handlerInputText={handlerInputText} inputText={inputText} />\n      <div className=\"wrapper\">\n        <Filtering setStatus={setStatus} />\n        <Sorting setSortTrigger={setSortTrigger} />\n      </div>\n\n      <ListBlock\n        setIsEdit={setIsEdit}\n        isEdit={isEdit}\n        todos={todos}\n        handlerEscapeEdition={handlerEscapeEdition}\n        handlerCheckingCheckBox={handlerCheckingCheckBox}\n        handlerDeleteItem={handlerDeleteItem}\n        handlerEditText={handlerEditText}\n        handleChangeItemText={handleChangeItemText}\n      />\n\n      <Pages\n        handlerPageChange={handlerPageChange}\n        amountOfPages={amountOfPages}\n      />\n\n      {isError ? (\n        <Snackbar\n          open={isError}\n          onClose={() => setIsError(false)}\n          autoHideDuration={2000}\n        >\n          <Alert onClose={() => setIsError(false)} severity=\"error\">\n            {errMessage}\n          </Alert>\n        </Snackbar>\n      ) : null}\n    </section>\n  );\n}\n","\nimport ToDoList from './ToDoList';\n\nexport default function App() {  \n  return (\n    <div className=\"App\">\n       <ToDoList/>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}