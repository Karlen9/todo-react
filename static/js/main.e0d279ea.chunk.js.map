{"version":3,"sources":["components/DeleteSelected/DeleteSelected.js","components/Filtering/Filtering.js","components/InputField/InputField.js","components/ListBlock/ListBlock.js","components/Sorting/Sorting.js","components/Pages/Pages.js","ToDoList.js","App.js","index.js"],"names":["DeleteSelected","props","className","onClick","e","handlerDeleteSelectedItems","handlerDeleteAllServerItems","value","handlerDeleteAllItems","Filtering","setStatus","InputField","TextField","onChange","handlerInputText","onKeyPress","type","autoComplete","id","label","variant","ListBlock","List","width","filteredTodos","map","todo","ListItem","ListItemIcon","Checkbox","checked","completed","handlerCheckingCheckBox","color","ListItemText","primary","text","isEditing","onKeyDown","handlerEscapeEdition","handlerEditText","date","IconButton","handlerCheckIsEditing","edge","aria-label","handlerDeleteItem","Sorting","Button","handlerSortDateToUp","size","handlerSortDateToDown","Pages","handlerPageChange","amountOfPages","Pagination","count","ToDoList","useState","inputText","setInputText","editInput","setEditInput","todos","setTodos","setFilteredTodos","status","inputVisible","setInputVisible","isEmpty","setIsEmpty","currPage","setCurrPage","setAmountOfPages","sortTrigger","setSortTrigger","handlerSubmitTodo","a","console","log","name","done","axios","post","process","REACT_APP_POST_URL","makeGetRequest","makePostRequest","get","REACT_APP_GET_URL","params","order","filterBy","data","item","index","createdAt","uuid","handleChangeItemText","editingItem","find","editItemRequest","itemName","patch","handlerFilterTodos","page","cPage","slice","filter","handlerPageCounter","stat","Math","ceil","length","useEffect","key","target","trim","alert","preventDefault","updatedTodos","element","prevElement","completedTodo","deletingItem","delete","deleteItem","i","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0d279ea.chunk.js","sourcesContent":["import './deleteSelected.css';\r\n\r\n\r\nexport default function DeleteSelected(props) {\r\n  \r\n  \r\n  return(\r\n    <div className=\"delete-section\">\r\n      <button className=\"button selected-button\" onClick={ (e) => props.handlerDeleteSelectedItems(e)}>Delete select</button>\r\n      <button className=\"button all-server-button\" onClick={() =>  props.handlerDeleteAllServerItems() } value=\"del-all\" >Delete all server items</button>\r\n      <button className=\"button all-button\" onClick={() =>  props.handlerDeleteAllItems() } value=\"del-all\" >Delete all</button>\r\n\r\n    </div>\r\n  )\r\n}","import './Filtering.css';\r\n\r\nexport default function Filtering(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"selection-bar\">\r\n          <button className=\"button all-button\" onClick={() =>  props.setStatus(\"all\") } value=\"all\" >All</button>\r\n          <button className=\"button done-button\" onClick={() => props.setStatus(\"done\")} value=\"done\">Done</button>\r\n          <button className=\"button undone-button\" onClick={() => props.setStatus(\"undone\")} value=\"undone\">Undone</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}","import TextField from '@material-ui/core/TextField';\r\nimport './inputfield.css';\r\n\r\nexport default function InputField(props) {  \r\n  return (\r\n    <div className=\"input\">\r\n      <TextField onChange={ props.handlerInputText } onKeyPress={ props.handlerInputText } type=\"text\" autoComplete= \"off\" className=\"main-input\" id=\"outlined-basic\" label=\"I want to...\" variant=\"outlined\"/>\r\n    </div>\r\n  );\r\n}\r\n","import List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport EditInput from '../../components/EditInput/EditInput';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//import ToDoList from '../../ToDoList';\r\nimport './listblock.css';\r\n\r\nexport default function ListBlock(props) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List width=\"100%\">\r\n      { props.filteredTodos.map((todo) => (\r\n        <ListItem key={todo.id} >\r\n          <ListItemIcon>\r\n            <Checkbox checked={todo.completed} onClick={ (e) => props.handlerCheckingCheckBox(e, todo.id)} color=\"primary\"/>\r\n          </ListItemIcon>\r\n          <ListItemText primary={todo.text} />\r\n          { todo.isEditing ? <TextField className=\"edit-input\" onKeyDown={(e) => props.handlerEscapeEdition(e, todo.id)} onChange={ (e) => props.handlerEditText(e) } onKeyPress={ (e) => {props.handlerEditText(e, todo.id); }}/> : null }\r\n          <p className=\"date\">{todo.date}</p>\r\n          <IconButton onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}  edge=\"end\" aria-label=\"comments\">\r\n            <EditOutlinedIcon onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}/>  \r\n          </IconButton>\r\n          <IconButton onClick={ (e) => props.handlerDeleteItem(e, todo.id) }  edge=\"end\" aria-label=\"comments\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItem>\r\n        )) }\r\n      </List>\r\n      </div>\r\n  );\r\n}","import Button from '@material-ui/core/Button';\r\nimport { ImArrowUp } from 'react-icons/im';\r\nimport { ImArrowDown } from 'react-icons/im';\r\nimport './sorting.css';\r\n\r\nexport default function Sorting(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"sort\">\r\n          <h3>Sort by Dаte</h3>\r\n          <div className=\"arrows\">\r\n            <Button onClick={() => props.handlerSortDateToUp()} variant=\"contained\">\r\n              <ImArrowUp className=\"up-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n            <Button onClick={() => props.handlerSortDateToDown()}variant=\"contained\">\r\n              <ImArrowDown className=\"down-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import './pages.css';\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nexport default function Pages({handlerPageChange, amountOfPages}) {\r\n  return (\r\n    <Pagination \r\n      onChange={handlerPageChange}\r\n      count={amountOfPages}\r\n    />\r\n  )\r\n}","//imports\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport DeleteSelected from './components/DeleteSelected/DeleteSelected';\r\nimport Filtering from './components/Filtering/Filtering';\r\nimport InputField from './components/InputField/InputField';\r\nimport ListBlock from './components/ListBlock/ListBlock';\r\nimport Sorting from './components/Sorting/Sorting';\r\nimport Pages from './components/Pages/Pages';\r\nimport './ToDoList.css';\r\nimport EditInput from './components/EditInput/EditInput';\r\n\r\n\r\nexport default function ToDoList() {\r\n  const [inputText, setInputText] = useState('');\r\n  const [editInput, setEditInput] = useState('');\r\n  const [todos, setTodos] = useState([]);\r\n  const [todoId, setTodoId] = useState(0);\r\n  const [filteredTodos, setFilteredTodos] = useState([...todos]);\r\n  const [status, setStatus] = useState('all');\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  const [isEmpty, setIsEmpty] = useState(true);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [amountOfPages, setAmountOfPages] = useState(1);\r\n  const [sortTrigger, setSortTrigger] = useState('asc');\r\n\r\n  const handlerInputText = (e) => {\r\n    if(e.key === 'Enter') {\r\n      if(e.target.value.trim() === '') {\r\n        alert('Write some task...');\r\n      } else {\r\n        e.preventDefault();\r\n        handlerSubmitTodo(e);\r\n        setInputText('');\r\n        e.target.value = '';\r\n      }\r\n    }\r\n    else {\r\n      setInputText(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handlerEditText = (e, index) => {\r\n    if(e.key === 'Enter') {\r\n      if(e.target.value.trim() === '') {\r\n        alert('Write some task...');\r\n      } else {\r\n        e.preventDefault();\r\n        setEditInput('');\r\n        handleChangeItemText(e, index);\r\n        e.target.value = '';\r\n      }\r\n    }\r\n    else {\r\n      setEditInput(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handlerEscapeEdition = (e, index) => {\r\n    if(e.key === 'Escape') {\r\n      let updatedTodos = [...todos];\r\n      e.preventDefault();\r\n      setEditInput(inputText);\r\n      const element = updatedTodos.find(e => e.id === index);\r\n      const prevElement = todos.find( e => e.id === index);\r\n      element.text = prevElement.text;\r\n      element.isEditing = false;\r\n    }\r\n  }\r\n\r\n  const handlerSubmitTodo = (e) => {\r\n    // e.preventDefault();\r\n    // setTodos([\r\n    //   ...todos, { text: inputText, completed: false, id: todoId, date: new Date(), } \r\n    // ]);\r\n    // setTodoId(todoId + 1);\r\n    // setStatus(\"all\");\r\n\r\n    async function makePostRequest() {\r\n      console.log('hello');\r\n      const todo = {name: inputText, done: false, isEditing: false};\r\n      const res = await axios.post(process.env.REACT_APP_POST_URL, todo);\r\n      makeGetRequest();\r\n    }\r\n    makePostRequest();\r\n  };\r\n\r\n  async function makeGetRequest() {\r\n    const {data} = await axios.get(process.env.REACT_APP_GET_URL, {\r\n      params:{\r\n        order: sortTrigger, \r\n        filterBy: status\r\n      }});\r\n    setTodos(data.map((item, index) => ( {id: index, text: item.name, completed: item.done, date: item.createdAt, uuid: item.uuid, isEditing: item.isEditing})));\r\n  }\r\n\r\n  const handlerSetEmptiness = () => {\r\n    if (todos.length === 0) {\r\n      setIsEmpty(true);\r\n      console.log(isEmpty);\r\n    } else if (todos !== 0){\r\n      setIsEmpty(false);\r\n      console.log(isEmpty);\r\n    }\r\n  };\r\n\r\n  const handlerSortDateToUp = () => {\r\n    setSortTrigger('asc');\r\n    makeGetRequest();\r\n\r\n  };\r\n\r\n  const handlerSortDateToDown = () => {\r\n    setSortTrigger('desc');\r\n    makeGetRequest();\r\n  };\r\n\r\n  const handleChangeItemText = (e, index) => {\r\n    // e.preventDefault();\r\n    // let updatedTodos = [...todos];\r\n    // const completedTodo = updatedTodos.find((e) => e.id === index);\r\n    // completedTodo.text = editInput;\r\n    // completedTodo.isEditing = false;\r\n    // setTodos([...updatedTodos]);\r\n\r\n    const editingItem = todos.find(e => e.id === index);\r\n\r\n    editItemRequest(editingItem, editInput);\r\n\r\n    editingItem.isEditing = false;\r\n\r\n    makeGetRequest();\r\n\r\n  };\r\n\r\n  async function editItemRequest(item, itemName) {\r\n    await axios.patch(`https://todo-api-learning.herokuapp.com/v1/task/3/` + item.uuid,\r\n      {\r\n        name: itemName\r\n      }\r\n    );\r\n  }\r\n\r\n  const handlerCheckingCheckBox = (e, index) => {\r\n    let updatedTodos = [...todos];\r\n    const completedTodo = updatedTodos.find(e => e.id === index);\r\n    completedTodo.completed = e.target.checked;\r\n    setTodos([...updatedTodos]);\r\n  };\r\n\r\n  const handlerDeleteItem = (e, index) => {\r\n    // e.preventDefault();\r\n    // let updatedTodos = [...todos];\r\n    // updatedTodos = updatedTodos.filter( el => el.id !== index);\r\n    // setTodos([...updatedTodos]);\r\n\r\n    const deletingItem = todos.find(e => e.id === index);\r\n\r\n    async function deleteItem() {\r\n\r\n      const element = await axios.delete(`https://todo-api-learning.herokuapp.com/v1/task/3/` + deletingItem.uuid);\r\n      makeGetRequest();\r\n      console.log(element);\r\n\r\n    }\r\n\r\n    deleteItem();\r\n  };\r\n\r\n  const handlerDeleteAllItems = () => {\r\n    setTodos([]);\r\n  };\r\n\r\n  const handlerDeleteAllServerItems = () => {\r\n    for(let i = 0; i < todos.length; i++) {\r\n      const deletingItem = todos.find(e => e.id === i);\r\n\r\n      async function deleteItem() {\r\n        const element = await axios.delete(`https://todo-api-learning.herokuapp.com/v1/task/3/` + deletingItem.uuid);\r\n        makeGetRequest();\r\n        console.log(element);\r\n      }\r\n      deleteItem();\r\n    }\r\n  };\r\n\r\n  const handlerDeleteSelectedItems = (e) => {\r\n    e.preventDefault();\r\n    let updatedTodos = [...todos];\r\n    updatedTodos = updatedTodos.filter(e => e.completed === false);\r\n    setTodos([...updatedTodos]);\r\n  };\r\n\r\n  const handlerFilterTodos = (status, page) => {\r\n    const cPage = page - 1;\r\n    switch(status) {\r\n      case 'all':\r\n        setFilteredTodos([...todos.slice(cPage * 5, cPage * 5 + 5)]);\r\n        setStatus('all');\r\n\r\n        break;\r\n      case 'done':\r\n        setFilteredTodos([...todos.filter(e => e.completed === true).slice(cPage * 5, cPage * 5 + 5)]);\r\n        setStatus('done');\r\n        handlerFilterTodos();\r\n\r\n        break;\r\n      case 'undone':\r\n        setFilteredTodos([...todos.filter(e => e.completed === false).slice(cPage * 5, cPage * 5 + 5)]);\r\n        setStatus('undone');\r\n        handlerFilterTodos();\r\n\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handlerCheckIsEditing = (e, index) => {\r\n    let updatedTodos = [...todos];\r\n    const completedTodo = updatedTodos.find(e => e.id === index);\r\n    console.log(inputVisible);\r\n    completedTodo.isEditing = true;\r\n    console.log(completedTodo.isEditing);\r\n    setTodos([...updatedTodos]);\r\n    setInputVisible(true);\r\n    console.log(inputVisible);\r\n  };  \r\n\r\n  const handlerPageCounter = (stat) => {\r\n    switch(stat) {\r\n      case \"all\":\r\n        setAmountOfPages(Math.ceil(todos.length / 5));\r\n        console.log(amountOfPages);\r\n        break;\r\n      case \"done\":\r\n        setAmountOfPages(Math.ceil(todos.filter(e => e.completed === true).length / 5));\r\n        break;\r\n      case \"undone\":\r\n        setAmountOfPages(Math.ceil(todos.filter(e => e.completed === false).length / 5));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handlerPageChange = (e, page) => {\r\n    setCurrPage(page);\r\n  };\r\n\r\n    //localStorage\r\n  \r\n  // const saveLocalTodos = () => {\r\n  //   localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  // };  //\r\n\r\n  // const getLocalTodos = () => {\r\n  //   if (localStorage.getItem(\"todos\") === null) {\r\n  //     localStorage.setItem(\"todos\", JSON.stringify([]));\r\n  //   } else {\r\n  //     let todosLocal = JSON.parse(localStorage.getItem(\"todos\"));\r\n  //     setTodos(todosLocal);\r\n  //   }\r\n  // };\r\n\r\n\r\n  // useEffect(() => {\r\n  //   //getLocalTodos();\r\n  // }, []);\r\n\r\n  \r\n  useEffect(() => {\r\n    handlerFilterTodos(status, currPage);\r\n    //saveLocalTodos();\r\n  }, [todos, status]);\r\n\r\n\r\n  useEffect(() => {\r\n    handlerSetEmptiness();\r\n\r\n  }, [todos]);\r\n\r\n  useEffect(() => {\r\n    handlerFilterTodos(status, currPage);\r\n  }, [currPage]);\r\n\r\n  useEffect(() => {\r\n    handlerFilterTodos(status, currPage);\r\n    setCurrPage(1);\r\n\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    handlerPageCounter(status);\r\n  }, [status, todos]);\r\n  \r\n  return (\r\n    <section className='main-section'>\r\n      <h1>ToDo</h1>\r\n      <InputField\r\n        handlerInputText = {handlerInputText}\r\n        inputText= {inputText}\r\n      />\r\n      { !isEmpty ? <div className='wrapper'>\r\n        <Filtering \r\n          setStatus = {setStatus}\r\n        />\r\n        <Sorting handlerSortDateToUp={handlerSortDateToUp} handlerSortDateToDown={handlerSortDateToDown}/>\r\n      </div> : null}\r\n      \r\n      <ListBlock \r\n        handlerEscapeEdition={handlerEscapeEdition}\r\n        handlerCheckIsEditing = {handlerCheckIsEditing} \r\n        handlerCheckingCheckBox = {handlerCheckingCheckBox}\r\n        handlerDeleteItem = {handlerDeleteItem}\r\n        filteredTodos = {filteredTodos}\r\n        inputVisible={inputVisible}\r\n        handlerEditText={handlerEditText}\r\n        handleChangeItemText={handleChangeItemText}\r\n        \r\n      />  \r\n\r\n      { !isEmpty ? <Pages\r\n        handlerPageCounter={handlerPageCounter}\r\n        handlerPageChange={handlerPageChange}\r\n        amountOfPages={amountOfPages}\r\n      /> : null }\r\n\r\n      { !isEmpty ? <div className='delete-main-section'>\r\n        <DeleteSelected \r\n          handlerDeleteAllServerItems={handlerDeleteAllServerItems}\r\n          handlerDeleteAllItems={handlerDeleteAllItems}\r\n          handlerDeleteSelectedItems={handlerDeleteSelectedItems}\r\n        />\r\n      </div> : null}\r\n       \r\n    </section> \r\n  );\r\n}\r\n \r\n","import ToDoList from './ToDoList';\r\n\r\nexport default function App() {  \r\n  return (\r\n    <div className=\"App\">\r\n       <ToDoList/>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}