{"version":3,"sources":["components/DeleteSelected/DeleteSelected.js","components/Filtering/Filtering.js","components/InputField/InputField.js","components/ListBlock/ListBlock.js","components/Sorting/Sorting.js","ToDoList.js","App.js","index.js"],"names":["DeleteSelected","props","className","onClick","handlerDeleteAllItems","value","Filtering","setStatus","InputField","TextField","onChange","handlerInputText","onKeyPress","type","autoComplete","id","label","variant","ListBlock","List","width","filteredTodos","map","todo","ListItem","ListItemIcon","Checkbox","checked","completed","e","handlerCheckingCheckBox","color","ListItemText","primary","text","isEditing","handlerEditText","date","IconButton","handlerCheckIsEditing","edge","aria-label","handlerDeleteItem","Sorting","Button","size","ToDoList","useState","inputText","setInputText","editInput","setEditInput","todos","setTodos","todoId","setTodoId","setFilteredTodos","status","inputVisible","setInputVisible","isEmpty","setIsEmpty","monthNames","handlerSubmitTodo","preventDefault","dateObj","Date","month","getMonth","output","String","getDate","padStart","getFullYear","handleChangeItemText","index","updatedTodos","completedTodo","find","useEffect","localStorage","getItem","setItem","JSON","stringify","todosLocal","parse","getLocalTodos","filter","length","console","log","key","target","trim","alert","el","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b86f44f2.chunk.js","sourcesContent":["import './deleteSelected.css';\r\n\r\n\r\nexport default function DeleteSelected(props) {\r\n  \r\n  \r\n  return(\r\n    <div className=\"delete-section\">\r\n      <button className=\"button selected-button\" >Delete select</button>\r\n      <button className=\"button all-button\" onClick={() =>  props.handlerDeleteAllItems() } value=\"del-all\" >Delete all</button>\r\n    </div>\r\n  )\r\n}","import './Filtering.css';\r\n\r\nexport default function Filtering(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"selection-bar\">\r\n          <button className=\"button all-button\" onClick={() =>  props.setStatus(\"all\") } value=\"all\" >All</button>\r\n          <button className=\"button done-button\" onClick={() => props.setStatus(\"done\")} value=\"done\">Done</button>\r\n          <button className=\"button undone-button\" onClick={() => props.setStatus(\"undone\")} value=\"undone\">Undone</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}","import TextField from '@material-ui/core/TextField';\r\nimport './InputField.css';\r\n\r\nexport default function InputField(props) {  \r\n  return (\r\n    <div className=\"input\">\r\n      <TextField onChange={ props.handlerInputText } onKeyPress={ props.handlerInputText } type=\"text\" autoComplete= \"off\" className=\"main-input\" id=\"outlined-basic\" label=\"I want to...\" variant=\"outlined\"/>\r\n    </div>\r\n  );\r\n}\r\n","import List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport EditInput from '../../components/EditInput/EditInput';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//import ToDoList from '../../ToDoList';\r\nimport './ListBlock.css';\r\n\r\nexport default function ListBlock(props) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List width=\"100%\">\r\n      { props.filteredTodos.map((todo) => (\r\n        <ListItem key={todo.id} >\r\n          <ListItemIcon>\r\n            <Checkbox checked={todo.completed} onClick={ (e) => props.handlerCheckingCheckBox(e, todo.id)} color=\"primary\"/>\r\n          </ListItemIcon>\r\n          <ListItemText primary={todo.text} />\r\n          { todo.isEditing ? <TextField className=\"edit-input\" onChange={ (e) => props.handlerEditText(e) } onKeyPress={ (e) => {props.handlerEditText(e, todo.id); }}/> : null }\r\n          <p className=\"date\">{todo.date}</p>\r\n          <IconButton onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}  edge=\"end\" aria-label=\"comments\">\r\n            <EditOutlinedIcon onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}/>  \r\n          </IconButton>\r\n          <IconButton onClick={ (e) => props.handlerDeleteItem(e, todo.id) }  edge=\"end\" aria-label=\"comments\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItem>\r\n        )) }\r\n      </List>\r\n      </div>\r\n  );\r\n}","import Button from '@material-ui/core/Button';\r\nimport { ImArrowUp } from 'react-icons/im';\r\nimport { ImArrowDown } from 'react-icons/im';\r\nimport './Sorting.css';\r\n\r\nexport default function Sorting(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"sort\">\r\n          <h3>Sort by DÐ°te</h3>\r\n          <div className=\"arrows\">\r\n            <Button variant=\"contained\">\r\n              <ImArrowUp className=\"up-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n            <Button variant=\"contained\">\r\n              <ImArrowDown className=\"down-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","//imports\nimport { VerifiedUserRounded } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\nimport DeleteSelected from './components/DeleteSelected/DeleteSelected';\nimport Filtering from './components/Filtering/Filtering';\nimport InputField from './components/InputField/InputField';\nimport ListBlock from './components/ListBlock/ListBlock';\nimport Sorting from './components/Sorting/Sorting';\nimport './ToDoList.css';\n\nexport default function ToDoList() {\n  const [inputText, setInputText] = useState('');\n  const [editInput, setEditInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [todoId, setTodoId] = useState(0);\n  const [filteredTodos, setFilteredTodos] = useState([...todos]);\n  const [status, setStatus] = useState(\"all\");\n  const [inputVisible, setInputVisible] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(true);\n\n\n  const handlerInputText = (e) => {\n    if(e.key === \"Enter\") {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        handlerSubmitTodo(e);\n        setInputText('');\n        e.target.value = '';\n      }\n    }\n    else {\n      setInputText(e.target.value);\n    }\n  };\n\n  const handlerEditText = (e, index) => {\n    if(e.key === \"Enter\") {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        setEditInput('');\n        handleChangeItemText(e, index);\n        e.target.value = '';\n      }\n    }\n    else {\n      setEditInput(e.target.value);\n    }\n  }; \n\n    //date\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  const handlerSubmitTodo = (e) => {\n    e.preventDefault();\n    const dateObj = new Date();\n    const month = monthNames[dateObj.getMonth()];\n    const day = String(dateObj.getDate()).padStart(2, '0');\n    const year = dateObj.getFullYear();\n    const output = day + '\\n'+ month  + '\\n' + year;\n    setTodos([\n      ...todos, { text: inputText, completed: false, id: todoId, date: output, isEditing: false} \n    ]);\n    setTodoId(todoId + 1);\n    setStatus(\"all\");\n    \n  };\n\n  const handlerSetEmptiness = () => {\n    if (todos.length === 0) {\n      setIsEmpty(true);\n      console.log(isEmpty);\n    } else if (todos !== 0){\n      setIsEmpty(false);\n      console.log(isEmpty);\n    }\n  };\n\n  const handlerDeleteItem = (e, index) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    updatedTodos = updatedTodos.filter( el => el.id !== index);\n    setTodos([...updatedTodos]);\n  };\n\n  const handleChangeItemText = (e, index) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find((e) => e.id === index);\n    completedTodo.text = editInput;\n    completedTodo.isEditing = false;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerCheckingCheckBox = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    completedTodo.completed = e.target.checked;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerDeleteAllItems = () => {\n    setTodos([]);\n  };\n\n\n  const handlerFilterTodos = () => {\n    if (status === \"all\") {\n      setFilteredTodos([...todos]);\n    } else if (status === \"done\") {\n      setFilteredTodos([...todos.filter(e => e.completed === true)]);\n    } else if (status === \"undone\") {\n      setFilteredTodos([...todos.filter(e => e.completed === false)]);\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };  \n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todosLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todosLocal);\n    }\n  };\n\n  const handlerCheckIsEditing = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    console.log(inputVisible);\n    completedTodo.isEditing = true;\n    console.log(completedTodo.isEditing);\n    setTodos([...updatedTodos]);\n    setInputVisible(true);\n    console.log(inputVisible);\n  };  \n\n\n\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  \n  useEffect(() => {\n    handlerFilterTodos();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  useEffect(() => {\n    handlerSetEmptiness();\n  }, [todos]);\n  \n  return (\n    <section className=\"main-section\">\n      <h1>ToDo</h1>\n      <InputField\n        handlerInputText = {handlerInputText}\n        inputText= {inputText}\n      />\n      { !isEmpty ? <div className=\"wrapper\">\n        <Filtering \n          setStatus = {setStatus}\n        />\n        <Sorting />\n      </div> : null}\n      \n      <ListBlock \n        handlerCheckIsEditing = {handlerCheckIsEditing} \n        handlerCheckingCheckBox = {handlerCheckingCheckBox}\n        handlerDeleteItem = {handlerDeleteItem}\n        filteredTodos = {filteredTodos}\n        inputVisible={inputVisible}\n        handlerEditText={handlerEditText}\n        handleChangeItemText={handleChangeItemText}\n        \n      />   \n      { !isEmpty ? <div className=\"delete-main-section\">\n        <DeleteSelected \n          handlerDeleteAllItems={handlerDeleteAllItems}\n        />\n      </div> : null}\n       \n    </section> \n  );\n}\n \n","import ToDoList from './ToDoList';\n\nexport default function App() {  \n  return (\n    <div className=\"App\">\n       <ToDoList/>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}