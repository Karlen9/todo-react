{"version":3,"sources":["components/DeleteSelected/DeleteSelected.js","components/Filtering/Filtering.js","components/InputField/InputField.js","components/ListBlock/ListBlock.js","components/Sorting/Sorting.js","components/Pages/Pages.js","ToDoList.js","App.js","index.js"],"names":["DeleteSelected","props","className","onClick","e","handlerDeleteSelectedItems","handlerDeleteAllServerItems","value","handlerDeleteAllItems","Filtering","setStatus","InputField","TextField","onChange","handlerInputText","onKeyPress","type","autoComplete","id","label","variant","ListBlock","List","width","filteredTodos","map","todo","ListItem","ListItemIcon","Checkbox","checked","completed","handlerCheckingCheckBox","color","ListItemText","primary","text","isEditing","onKeyDown","handlerEscapeEdition","handlerEditText","date","split","IconButton","handlerCheckIsEditing","edge","aria-label","handlerDeleteItem","Sorting","Button","handlerSortDateToUp","size","handlerSortDateToDown","Pages","handlerPageChange","amountOfPages","Pagination","count","ToDoList","useState","inputText","setInputText","editInput","setEditInput","todos","setTodos","setFilteredTodos","status","inputVisible","setInputVisible","isEmpty","setIsEmpty","currPage","setCurrPage","setAmountOfPages","sortTrigger","setSortTrigger","errMessage","setErrMessage","isError","setIsError","handlerSubmitTodo","a","console","log","name","done","axios","post","makeGetRequest","handlerErrors","makePostRequest","get","params","order","filterBy","data","item","index","createdAt","uuid","handleChangeItemText","editingItem","find","editItemRequest","itemName","patch","handlerFilterTodos","page","cPage","slice","filter","handlerPageCounter","stat","Math","ceil","length","err","response","message","request","useEffect","key","target","trim","alert","preventDefault","updatedTodos","element","prevElement","deletingItem","delete","deleteItem","i","error","Snackbar","open","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4898c9e8.chunk.js","sourcesContent":["import './deleteSelected.css';\n\n\nexport default function DeleteSelected(props) {\n  \n  \n  return(\n    <div className=\"delete-section\">\n      <button className=\"button selected-button\" onClick={ (e) => props.handlerDeleteSelectedItems(e)}>Delete select</button>\n      <button className=\"button all-server-button\" onClick={() =>  props.handlerDeleteAllServerItems() } value=\"del-all\" >Delete all server items</button>\n      <button className=\"button all-button\" onClick={() =>  props.handlerDeleteAllItems() } value=\"del-all\" >Delete all</button>\n\n    </div>\n  )\n}","import './filtering.css';\n\nexport default function Filtering(props) {  \n  return (\n    <div>\n       <div className=\"selection-bar\">\n          <button className=\"button all-button\" onClick={() =>  props.setStatus(\"all\") } value=\"all\" >All</button>\n          <button className=\"button done-button\" onClick={() => props.setStatus(\"done\")} value=\"done\">Done</button>\n          <button className=\"button undone-button\" onClick={() => props.setStatus(\"undone\")} value=\"undone\">Undone</button>\n        </div>\n    </div>\n  );\n}","import TextField from '@material-ui/core/TextField';\nimport './inputfield.css';\n\nexport default function InputField(props) {  \n  return (\n    <div className=\"input\">\n      <TextField onChange={ props.handlerInputText } onKeyPress={ props.handlerInputText } type=\"text\" autoComplete= \"off\" className=\"main-input\" id=\"outlined-basic\" label=\"I want to...\" variant=\"outlined\"/>\n    </div>\n  );\n}\n","import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport TextField from '@material-ui/core/TextField';\n\n//import ToDoList from '../../ToDoList';\nimport './listblock.css';\n\nexport default function ListBlock(props) {\n  return (\n    <div className=\"list\">\n      <List width=\"100%\">\n      { props.filteredTodos.map((todo) => (\n        <ListItem key={todo.id} >\n          <ListItemIcon>\n            <Checkbox checked={todo.completed} onClick={ (e) => props.handlerCheckingCheckBox(e, todo.id)} color=\"primary\"/>\n          </ListItemIcon>\n          <ListItemText primary={todo.text} />\n          { todo.isEditing ? <TextField className=\"edit-input\" onKeyDown={(e) => props.handlerEscapeEdition(e, todo.id)} onChange={ (e) => props.handlerEditText(e) } onKeyPress={ (e) => {props.handlerEditText(e, todo.id); }}/> : null }\n          <p className=\"date\">{todo.date.split('T')[0]}</p>\n          <IconButton onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}  edge=\"end\" aria-label=\"comments\">\n            <EditOutlinedIcon onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}/>  \n          </IconButton>\n          <IconButton onClick={ (e) => props.handlerDeleteItem(e, todo.id) }  edge=\"end\" aria-label=\"comments\">\n            <DeleteIcon />\n          </IconButton>\n        </ListItem>\n        )) }\n      </List>\n      </div>\n  );\n}","import Button from '@material-ui/core/Button';\nimport { ImArrowUp } from 'react-icons/im';\nimport { ImArrowDown } from 'react-icons/im';\nimport './sorting.css';\n\nexport default function Sorting(props) {  \n  return (\n    <div>\n       <div className=\"sort\">\n          <h3>Sort by Dаte</h3>\n          <div className=\"arrows\">\n            <Button onClick={() => props.handlerSortDateToUp()} variant=\"contained\">\n              <ImArrowUp className=\"up-arrow\" size=\"1rem\"/>\n            </Button>\n            <Button onClick={() => props.handlerSortDateToDown()}variant=\"contained\">\n              <ImArrowDown className=\"down-arrow\" size=\"1rem\"/>\n            </Button>\n          </div>\n        </div>\n    </div>\n  );\n}\n","import './pages.css';\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nexport default function Pages({handlerPageChange, amountOfPages}) {\n  return (\n    <Pagination \n      onChange={handlerPageChange}\n      count={amountOfPages}\n    />\n  )\n}","//imports\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DeleteSelected from './components/DeleteSelected/DeleteSelected';\nimport Filtering from './components/Filtering/Filtering';\nimport InputField from './components/InputField/InputField';\nimport ListBlock from './components/ListBlock/ListBlock';\nimport Sorting from './components/Sorting/Sorting';\nimport Pages from './components/Pages/Pages';\nimport { IconButton, Snackbar } from '@material-ui/core';\nimport './ToDoList.css';\nimport EditInput from './components/EditInput/EditInput';\n\n\nexport default function ToDoList() {\n  const [inputText, setInputText] = useState('');\n  const [editInput, setEditInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  //const [todoId, setTodoId] = useState(0);\n  const [filteredTodos, setFilteredTodos] = useState([...todos]);\n  const [status, setStatus] = useState('all');\n  const [inputVisible, setInputVisible] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [currPage, setCurrPage] = useState(1);\n  const [amountOfPages, setAmountOfPages] = useState(1);\n  const [sortTrigger, setSortTrigger] = useState('asc');\n  const [errMessage, setErrMessage] = useState('');\n  const [isError, setIsError] = useState(false);\n\n\n  const handlerInputText = (e) => {\n    if(e.key === 'Enter') {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        handlerSubmitTodo(e);\n        setInputText('');\n        e.target.value = '';\n      }\n    }\n    else {\n      setInputText(e.target.value);\n    }\n  };\n\n  const handlerEditText = (e, index) => {\n    if(e.key === 'Enter') {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        setEditInput('');\n        handleChangeItemText(e, index);\n        e.target.value = '';\n      }\n    }\n    else {\n      setEditInput(e.target.value);\n    }\n  };\n\n  const handlerEscapeEdition = (e, index) => {\n    if(e.key === 'Escape') {\n      let updatedTodos = [...todos];\n      e.preventDefault();\n      setEditInput(inputText);\n      const element = updatedTodos.find(e => e.id === index);\n      const prevElement = todos.find( e => e.id === index);\n      element.text = prevElement.text;\n      element.isEditing = false;\n    }\n  }\n\n  const handlerSubmitTodo = (e) => {\n    // e.preventDefault();\n    // setTodos([\n    //   ...todos, { text: inputText, completed: false, id: todoId, date: new Date(), } \n    // ]);\n    // setTodoId(todoId + 1);\n    // setStatus(\"all\");\n\n    async function makePostRequest() {\n      try {\n        console.log('hello');\n        const todo = {name: inputText, done: false, isEditing: false};\n        const res = await axios.post(`https://todo-api-learning.herokuapp.com/v1/task/3`, todo);\n        makeGetRequest();\n      } catch (error) {\n        handlerErrors(error);\n      }\n    }\n    makePostRequest();\n  };\n\n  async function makeGetRequest() {\n\n    try {\n      const {data} = await axios.get(`https://todo-api-learning.herokuapp.com/v1/tasks/3`, {\n      params:{\n        order: sortTrigger, \n        filterBy: status\n      }});\n    setTodos(data.map((item, index) => ( {id: index, text: item.name, completed: item.done, date: item.createdAt, uuid: item.uuid, isEditing: item.isEditing})));\n    } catch (error) {\n      handlerErrors(error);\n    }\n  }\n\n  const handlerSetEmptiness = () => {\n    if (todos.length === 0) {\n      setIsEmpty(true);\n    } else if (todos !== 0){\n      setIsEmpty(false);\n    }\n  };\n\n  const handlerSortDateToUp = () => {\n    setSortTrigger('asc');\n    makeGetRequest();\n\n  };\n\n  const handlerSortDateToDown = () => {\n    setSortTrigger('desc');\n    makeGetRequest();\n  };\n\n  const handleChangeItemText = (e, index) => {\n    // e.preventDefault();\n    // let updatedTodos = [...todos];\n    // const completedTodo = updatedTodos.find((e) => e.id === index);\n    // completedTodo.text = editInput;\n    // completedTodo.isEditing = false;\n    // setTodos([...updatedTodos]);\n\n    const editingItem = todos.find(e => e.id === index);\n\n    editItemRequest(editingItem, editInput);\n\n    editingItem.isEditing = false;\n\n    makeGetRequest();\n\n  };\n\n  async function editItemRequest(item, itemName) {\n    try {\n      await axios.patch(`https://todo-api-learning.herokuapp.com/v1/task/3/` + item.uuid,\n        {\n          name: itemName\n        }\n      );\n    } catch (error) {\n      handlerErrors(error);\n    }\n    \n  }\n\n  const handlerCheckingCheckBox = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    completedTodo.completed = e.target.checked;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerDeleteItem = (e, index) => {\n    // e.preventDefault();\n    // let updatedTodos = [...todos];\n    // updatedTodos = updatedTodos.filter( el => el.id !== index);\n    // setTodos([...updatedTodos]);\n\n    const deletingItem = todos.find(e => e.id === index);\n\n    async function deleteItem() {\n      try {\n        const element = await axios.delete(`https://todo-api-learning.herokuapp.com/v1/task/3/` + deletingItem.uuid);\n        makeGetRequest();\n      } catch (error) {\n        handlerErrors(error);\n      }\n\n    }\n\n    deleteItem();\n  };\n\n  const handlerDeleteAllItems = () => {\n    setTodos([]);\n  };\n\n  const handlerDeleteAllServerItems = () => {\n    try {\n      for(let i = 0; i < todos.length; i++) {\n        const deletingItem = todos.find(e => e.id === i);\n  \n        async function deleteItem() {\n          const element = await axios.delete(`https://todo-api-learning.herokuapp.com/v1/task/3/` + deletingItem.uuid);\n          makeGetRequest();\n        }\n        deleteItem();\n      }\n    } catch (error) {\n      handlerErrors(error);\n    }\n  };\n\n  const handlerDeleteSelectedItems = (e) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    updatedTodos = updatedTodos.filter(e => e.completed === false);\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerFilterTodos = (status, page) => {\n    const cPage = page - 1;\n    switch(status) {\n      case 'all':\n        setFilteredTodos([...todos.slice(cPage * 5, cPage * 5 + 5)]);\n        setStatus('all');\n\n        break;\n      case 'done':\n        setFilteredTodos([...todos.filter(e => e.completed === true).slice(cPage * 5, cPage * 5 + 5)]);\n        setStatus('done');\n        handlerFilterTodos();\n\n        break;\n      case 'undone':\n        setFilteredTodos([...todos.filter(e => e.completed === false).slice(cPage * 5, cPage * 5 + 5)]);\n        setStatus('undone');\n        handlerFilterTodos();\n\n        break;\n    }\n  };\n\n  const handlerCheckIsEditing = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    completedTodo.isEditing = true;\n    setTodos([...updatedTodos]);\n    setInputVisible(true);\n  };  \n\n  const handlerPageCounter = (stat) => {\n    switch(stat) {\n      case \"all\":\n        setAmountOfPages(Math.ceil(todos.length / 5));\n        break;\n      case \"done\":\n        setAmountOfPages(Math.ceil(todos.filter(e => e.completed === true).length / 5));\n        break;\n      case \"undone\":\n        setAmountOfPages(Math.ceil(todos.filter(e => e.completed === false).length / 5));\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handlerPageChange = (e, page) => {\n    setCurrPage(page);\n  };\n\n  const handlerErrors = (err) => {\n    if(err.response) {\n      setIsError(true);\n      console.log(errMessage);\n\n      console.log(isError);\n\n      setErrMessage(err.message);\n    } else if(err.request) {\n      setIsError(true);\n      console.log(isError);\n      console.log(errMessage);\n\n      setErrMessage('Problem with Request!');\n    } \n  };\n\n    //localStorage\n  \n  // const saveLocalTodos = () => {\n  //   localStorage.setItem(\"todos\", JSON.stringify(todos));\n  // };  //\n\n  // const getLocalTodos = () => {\n  //   if (localStorage.getItem(\"todos\") === null) {\n  //     localStorage.setItem(\"todos\", JSON.stringify([]));\n  //   } else {\n  //     let todosLocal = JSON.parse(localStorage.getItem(\"todos\"));\n  //     setTodos(todosLocal);\n  //   }\n  // };\n\n\n  // useEffect(() => {\n  //   //getLocalTodos();\n  // }, []);\n\n  \n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n    //saveLocalTodos();\n  }, [todos, status]);\n\n\n  useEffect(() => {\n    handlerSetEmptiness();\n  }, [todos]);\n\n  useEffect(() => {\n\n  }, []);\n\n  // useEffect(() => {\n  //   setIsError(true);\n  // }, [errMessage]);\n\n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n  }, [currPage]);\n\n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n    setCurrPage(1);\n\n  }, [status]);\n\n  useEffect(() => {\n    handlerPageCounter(status);\n  }, [status, todos]);\n  \n  return (\n    <section className='main-section'>\n      <h1>ToDo</h1>\n      <InputField\n        handlerInputText = {handlerInputText}\n        inputText= {inputText}\n      />\n      { !isEmpty ? <div className='wrapper'>\n        <Filtering \n          setStatus = {setStatus}\n        />\n        <Sorting handlerSortDateToUp={handlerSortDateToUp} handlerSortDateToDown={handlerSortDateToDown}/>\n      </div> : null}\n      \n      <ListBlock \n        handlerEscapeEdition={handlerEscapeEdition}\n        handlerCheckIsEditing = {handlerCheckIsEditing} \n        handlerCheckingCheckBox = {handlerCheckingCheckBox}\n        handlerDeleteItem = {handlerDeleteItem}\n        filteredTodos = {filteredTodos}\n        inputVisible={inputVisible}\n        handlerEditText={handlerEditText}\n        handleChangeItemText={handleChangeItemText}\n        \n      />  \n\n      { !isEmpty ? <Pages\n        handlerPageCounter={handlerPageCounter}\n        handlerPageChange={handlerPageChange}\n        amountOfPages={amountOfPages}\n      /> : null }\n\n      { !isEmpty ? <div className='delete-main-section'>\n        <DeleteSelected \n          handlerDeleteAllServerItems={handlerDeleteAllServerItems}\n          handlerDeleteAllItems={handlerDeleteAllItems}\n          handlerDeleteSelectedItems={handlerDeleteSelectedItems}\n        />\n      </div> : null}\n       \n      { isError ? \n      <Snackbar \n        open={isError} \n        message={errMessage} \n      />\n      : null }\n    </section> \n  );\n}\n \n","import ToDoList from './ToDoList';\n\nexport default function App() {  \n  return (\n    <div className=\"App\">\n       <ToDoList/>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}