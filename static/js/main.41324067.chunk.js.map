{"version":3,"sources":["components/DeleteSelected/DeleteSelected.js","components/Filtering/Filtering.js","components/InputField/InputField.js","components/ListBlock/ListBlock.js","components/Sorting/Sorting.js","ToDoList.js","App.js","index.js"],"names":["DeleteSelected","props","className","onClick","e","handlerDeleteSelectedItems","handlerDeleteAllItems","value","Filtering","setStatus","InputField","TextField","onChange","handlerInputText","onKeyPress","type","autoComplete","id","label","variant","ListBlock","List","width","filteredTodos","map","todo","ListItem","ListItemIcon","Checkbox","checked","completed","handlerCheckingCheckBox","color","ListItemText","primary","text","isEditing","onKeyDown","handlerEscapeEdition","handlerEditText","date","toLocaleString","IconButton","handlerCheckIsEditing","edge","aria-label","handlerDeleteItem","Sorting","Button","handlerSortDateToUp","size","handlerSortDateToDown","ToDoList","useState","inputText","setInputText","editInput","setEditInput","todos","setTodos","todoId","setTodoId","setFilteredTodos","status","inputVisible","setInputVisible","isEmpty","setIsEmpty","handlerSubmitTodo","preventDefault","Date","sort","a","b","console","log","aTime","handleChangeItemText","index","updatedTodos","completedTodo","find","useEffect","localStorage","getItem","setItem","JSON","stringify","todosLocal","parse","getLocalTodos","filter","length","key","target","trim","alert","element","prevElement","el","Pagination","count","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41324067.chunk.js","sourcesContent":["import './deleteSelected.css';\r\n\r\n\r\nexport default function DeleteSelected(props) {\r\n  \r\n  \r\n  return(\r\n    <div className=\"delete-section\">\r\n      <button className=\"button selected-button\" onClick={ (e) => props.handlerDeleteSelectedItems(e)}>Delete select</button>\r\n      <button className=\"button all-button\" onClick={() =>  props.handlerDeleteAllItems() } value=\"del-all\" >Delete all</button>\r\n    </div>\r\n  )\r\n}","import './Filtering.css';\r\n\r\nexport default function Filtering(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"selection-bar\">\r\n          <button className=\"button all-button\" onClick={() =>  props.setStatus(\"all\") } value=\"all\" >All</button>\r\n          <button className=\"button done-button\" onClick={() => props.setStatus(\"done\")} value=\"done\">Done</button>\r\n          <button className=\"button undone-button\" onClick={() => props.setStatus(\"undone\")} value=\"undone\">Undone</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}","import TextField from '@material-ui/core/TextField';\r\nimport './InputField.css';\r\n\r\nexport default function InputField(props) {  \r\n  return (\r\n    <div className=\"input\">\r\n      <TextField onChange={ props.handlerInputText } onKeyPress={ props.handlerInputText } type=\"text\" autoComplete= \"off\" className=\"main-input\" id=\"outlined-basic\" label=\"I want to...\" variant=\"outlined\"/>\r\n    </div>\r\n  );\r\n}\r\n","import List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport EditInput from '../../components/EditInput/EditInput';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//import ToDoList from '../../ToDoList';\r\nimport './ListBlock.css';\r\n\r\nexport default function ListBlock(props) {\r\n  return (\r\n    <div className=\"list\">\r\n      <List width=\"100%\">\r\n      { props.filteredTodos.map((todo) => (\r\n        <ListItem key={todo.id} >\r\n          <ListItemIcon>\r\n            <Checkbox checked={todo.completed} onClick={ (e) => props.handlerCheckingCheckBox(e, todo.id)} color=\"primary\"/>\r\n          </ListItemIcon>\r\n          <ListItemText primary={todo.text} />\r\n          { todo.isEditing ? <TextField className=\"edit-input\" onKeyDown={(e) => props.handlerEscapeEdition(e, todo.id)} onChange={ (e) => props.handlerEditText(e) } onKeyPress={ (e) => {props.handlerEditText(e, todo.id); }}/> : null }\r\n          <p className=\"date\">{todo.date.toLocaleString()}</p>\r\n          <IconButton onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}  edge=\"end\" aria-label=\"comments\">\r\n            <EditOutlinedIcon onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}/>  \r\n          </IconButton>\r\n          <IconButton onClick={ (e) => props.handlerDeleteItem(e, todo.id) }  edge=\"end\" aria-label=\"comments\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItem>\r\n        )) }\r\n      </List>\r\n      </div>\r\n  );\r\n}","import Button from '@material-ui/core/Button';\r\nimport { ImArrowUp } from 'react-icons/im';\r\nimport { ImArrowDown } from 'react-icons/im';\r\nimport './Sorting.css';\r\n\r\nexport default function Sorting(props) {  \r\n  return (\r\n    <div>\r\n       <div className=\"sort\">\r\n          <h3>Sort by Dаte</h3>\r\n          <div className=\"arrows\">\r\n            <Button onClick={() => props.handlerSortDateToUp()} variant=\"contained\">\r\n              <ImArrowUp className=\"up-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n            <Button onClick={() => props.handlerSortDateToDown()}variant=\"contained\">\r\n              <ImArrowDown className=\"down-arrow\" size=\"1rem\"/>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","//imports\nimport { VerifiedUserRounded } from '@material-ui/icons';\nimport Pagination from '@material-ui/lab/Pagination';\nimport React, { useEffect, useState } from 'react';\nimport DeleteSelected from './components/DeleteSelected/DeleteSelected';\nimport Filtering from './components/Filtering/Filtering';\nimport InputField from './components/InputField/InputField';\nimport ListBlock from './components/ListBlock/ListBlock';\nimport Sorting from './components/Sorting/Sorting';\nimport './ToDoList.css';\n\nexport default function ToDoList() {\n  const [inputText, setInputText] = useState('');\n  const [editInput, setEditInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [todoId, setTodoId] = useState(0);\n  const [filteredTodos, setFilteredTodos] = useState([...todos]);\n  const [status, setStatus] = useState(\"all\");\n  const [inputVisible, setInputVisible] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(true);\n\n  //date\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n  \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  const handlerInputText = (e) => {\n    if(e.key === \"Enter\") {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        handlerSubmitTodo(e);\n        setInputText('');\n        e.target.value = '';\n      }\n    }\n    else {\n      setInputText(e.target.value);\n    }\n  };\n\n  const handlerEditText = (e, index) => {\n    if(e.key === \"Enter\") {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        setEditInput('');\n        handleChangeItemText(e, index);\n        e.target.value = '';\n      }\n    }\n    else {\n      setEditInput(e.target.value);\n    }\n  };\n\n  const handlerEscapeEdition = (e, index) => {\n    if(e.key === \"Escape\") {\n      let updatedTodos = [...todos];\n      e.preventDefault();\n      setEditInput(inputText);\n      const element = updatedTodos.find(e => e.id === index);\n      const prevElement = todos.find( e => e.id === index);\n      element.text = prevElement.text;\n      element.isEditing = false;\n    }\n  }\n\n  const handlerSubmitTodo = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos, { text: inputText, completed: false, id: todoId, date: new Date(), isEditing: false} \n    ]);\n    setTodoId(todoId + 1);\n    setStatus(\"all\");\n    \n  };\n\n  const handlerSetEmptiness = () => {\n    if (todos.length === 0) {\n      setIsEmpty(true);\n      console.log(isEmpty);\n    } else if (todos !== 0){\n      setIsEmpty(false);\n      console.log(isEmpty);\n    }\n  };\n\n  const handlerDeleteItem = (e, index) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    updatedTodos = updatedTodos.filter( el => el.id !== index);\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerSortDateToUp = () => {\n    todos.sort((a, b) => {\n      const aTime = a.date;\n      const bTime = b.date;\n      return aTime - bTime;\n    });\n    setFilteredTodos([...todos]);\n\n    console.log('сорт');\n    console.log([...todos]);\n\n  };\n\n  const handlerSortDateToDown = () => {\n    todos.sort((a, b) => {\n      const aTime = a.date;\n      const bTime = b.date;\n      return bTime - aTime;\n    });\n    setFilteredTodos([...todos]);\n    console.log('сорт1');\n    console.log([...todos]);\n\n  };\n\n  const handleChangeItemText = (e, index) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find((e) => e.id === index);\n    completedTodo.text = editInput;\n    completedTodo.isEditing = false;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerCheckingCheckBox = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    completedTodo.completed = e.target.checked;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerDeleteAllItems = () => {\n    setTodos([]);\n  };\n\n  const handlerDeleteSelectedItems = (e) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    updatedTodos = updatedTodos.filter(e => e.completed === false);\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerFilterTodos = () => {\n    if (status === \"all\") {\n      setFilteredTodos([...todos]);\n    } else if (status === \"done\") {\n      setFilteredTodos([...todos.filter(e => e.completed === true)]);\n    } else if (status === \"undone\") {\n      setFilteredTodos([...todos.filter(e => e.completed === false)]);\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };  \n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todosLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todosLocal);\n    }\n  };\n\n  const handlerCheckIsEditing = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    console.log(inputVisible);\n    completedTodo.isEditing = true;\n    console.log(completedTodo.isEditing);\n    setTodos([...updatedTodos]);\n    setInputVisible(true);\n    console.log(inputVisible);\n  };  \n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  \n  useEffect(() => {\n    handlerFilterTodos();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  useEffect(() => {\n    handlerSortDateToUp();\n    handlerSortDateToDown();\n    handlerSetEmptiness();\n  }, [todos]);\n  \n  return (\n    <section className=\"main-section\">\n      <h1>ToDo</h1>\n      <InputField\n        handlerInputText = {handlerInputText}\n        inputText= {inputText}\n      />\n      { !isEmpty ? <div className=\"wrapper\">\n        <Filtering \n          setStatus = {setStatus}\n        />\n        <Sorting handlerSortDateToUp={handlerSortDateToUp} handlerSortDateToDown={handlerSortDateToDown}/>\n      </div> : null}\n      \n      <ListBlock \n        handlerEscapeEdition={handlerEscapeEdition}\n        handlerCheckIsEditing = {handlerCheckIsEditing} \n        handlerCheckingCheckBox = {handlerCheckingCheckBox}\n        handlerDeleteItem = {handlerDeleteItem}\n        filteredTodos = {filteredTodos}\n        inputVisible={inputVisible}\n        handlerEditText={handlerEditText}\n        handleChangeItemText={handleChangeItemText}\n        \n      />   \n      <Pagination  count={3}/>\n      { !isEmpty ? <div className=\"delete-main-section\">\n        <DeleteSelected \n          handlerDeleteAllItems={handlerDeleteAllItems}\n          handlerDeleteSelectedItems={handlerDeleteSelectedItems}\n        />\n      </div> : null}\n       \n    </section> \n  );\n}\n \n","import ToDoList from './ToDoList';\n\nexport default function App() {  \n  return (\n    <div className=\"App\">\n       <ToDoList/>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}