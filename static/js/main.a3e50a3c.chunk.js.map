{"version":3,"sources":["components/Filtering/Filtering.js","components/InputField/InputField.js","components/ListBlock/ListBlock.js","components/Sorting/Sorting.js","components/Pages/Pages.js","ToDoList.js","SignUp.js","SignIn.js","App.js","index.js"],"names":["Filtering","props","className","onClick","setStatus","value","InputField","TextField","onChange","handlerInputText","onKeyPress","type","autoComplete","id","label","variant","ListBlock","List","width","todos","map","todo","ListItem","ListItemIcon","Checkbox","checked","done","e","handlerCheckingCheckBox","color","ListItemText","primary","name","onDoubleClick","setIsEdit","isEdit","onKeyDown","handlerEscapeEdition","handlerEditText","createdAt","split","IconButton","handlerDeleteItem","edge","aria-label","Sorting","Button","setSortBy","size","Pages","handlerPageChange","amountOfPages","Pagination","count","ToDoList","useState","inputText","setInputText","editInput","setEditInput","setTodos","status","currPage","setCurrPage","setAmountOfPages","sortBy","errMessage","setErrMessage","isError","setIsError","amountOfTasks","setAmountOfTasks","REST_API_URL","process","REACT_APP_BASE_HEROKU","REST_API_URL_GET","REACT_APP_GET_HEROKU","getItem","sort","filter","pagination","a","axios","get","params","order","filterBy","page","headers","localStorage","data","Math","ceil","rows","editItem","item","method","url","defaults","baseURL","handlerSubmitTodo","console","log","postItemRequest","handleChangeItemText","index","task","find","interceptors","response","use","error","errors","Promise","reject","useEffect","to","redirectToLogIn","key","target","trim","Error","preventDefault","message","updatedTodos","element","prevElement","text","blur","deletingItem","deleteItem","focus","removeItem","signOut","Snackbar","open","onClose","autoHideDuration","Alert","severity","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","SignUp","classes","setName","eMail","setEMail","pword","setPword","register","email","password","Container","component","maxWidth","CssBaseline","noValidate","onSubmit","Grid","container","xs","required","fullWidth","autoFocus","justify","Link","href","SignIn","REACT_APP_LOGIN_HEROKU","setEmail","setPassword","login","user","setItem","accessToken","App","basename","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3e50a3c.chunk.js","sourcesContent":["import \"./filtering.css\";\n\nexport default function Filtering(props) {\n  return (\n    <div>\n      <div className=\"selection-bar\">\n        <button\n          className=\"button all-button\"\n          onClick={() => props.setStatus(null)}\n          value=\"all\"\n        >\n          All\n        </button>\n        <button\n          className=\"button done-button\"\n          onClick={() => props.setStatus(true)}\n          value=\"done\"\n        >\n          Done\n        </button>\n        <button\n          className=\"button undone-button\"\n          onClick={() => props.setStatus(false)}\n          value=\"undone\"\n        >\n          Undone\n        </button>\n      </div>\n    </div>\n  );\n}\n","import TextField from '@material-ui/core/TextField';\nimport './inputfield.css';\n\nexport default function InputField(props) {  \n  return (\n    <div className=\"input\">\n      <TextField onChange={ props.handlerInputText } onKeyPress={ props.handlerInputText } type=\"text\" autoComplete= \"off\" className=\"main-input\" id=\"outlined-basic\" label=\"I want to...\" variant=\"outlined\"/>\n    </div>\n  );\n}\n","import List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport \"./listblock.css\";\n\nexport default function ListBlock(props) {\n  return (\n    <div className=\"list\">\n      <List width=\"100%\">\n        {props.todos.map((todo) => (\n          <ListItem key={todo.id}>\n            <ListItemIcon>\n              <Checkbox\n                checked={todo.done}\n                onClick={(e) => props.handlerCheckingCheckBox(e, todo.id)}\n                color=\"primary\"\n              />\n            </ListItemIcon>\n            <ListItemText\n              primary={todo.name}\n              onDoubleClick={() => {\n                props.setIsEdit(todo.id);\n              }}\n            />\n            {props.isEdit === todo.id ? (\n              <TextField\n                className=\"edit-input\"\n                onKeyDown={(e) => props.handlerEscapeEdition(e, todo.id)}\n                onChange={(e) => props.handlerEditText(e)}\n                onKeyPress={(e) => {\n                  props.handlerEditText(e, todo.id);\n                }}\n              />\n            ) : null}\n\n            {<p className=\"date\">{todo.createdAt.split(\"T\")[0]}</p>}\n            <IconButton\n              onClick={(e) => props.handlerDeleteItem(todo.id)}\n              edge=\"end\"\n              aria-label=\"comments\"\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n","import Button from \"@material-ui/core/Button\";\nimport { ImArrowUp } from \"react-icons/im\";\nimport { ImArrowDown } from \"react-icons/im\";\nimport \"./sorting.css\";\n\nexport default function Sorting(props) {\n  return (\n    <div>\n      <div className=\"sort\">\n        <h3>Sort by Dаte</h3>\n        <div className=\"arrows\">\n          <Button onClick={() => props.setSortBy(\"asc\")} variant=\"contained\">\n            <ImArrowUp className=\"up-arrow\" size=\"1rem\" />\n          </Button>\n          <Button onClick={() => props.setSortBy(\"desc\")} variant=\"contained\">\n            <ImArrowDown className=\"down-arrow\" size=\"1rem\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import './pages.css';\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nexport default function Pages({handlerPageChange, amountOfPages}) {\n  return (\n    <Pagination \n      onChange={handlerPageChange}\n      count={amountOfPages}\n    />\n  )\n}","//imports\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Filtering from \"./components/Filtering/Filtering\";\nimport InputField from \"./components/InputField/InputField\";\nimport ListBlock from \"./components/ListBlock/ListBlock\";\nimport Sorting from \"./components/Sorting/Sorting\";\nimport Pages from \"./components/Pages/Pages\";\nimport { Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Redirect } from \"react-router\";\n\nimport \"./ToDoList.css\";\n\nexport default function ToDoList(props) {\n  const [inputText, setInputText] = useState(\"\");\n  const [editInput, setEditInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [currPage, setCurrPage] = useState(1);\n  const [amountOfPages, setAmountOfPages] = useState(1);\n  const [sortBy, setSortBy] = useState(\"asc\");\n  const [errMessage, setErrMessage] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [isEdit, setIsEdit] = useState(\"\");\n  const [amountOfTasks, setAmountOfTasks] = useState(0);\n\n  const REST_API_URL = process.env.REACT_APP_BASE_HEROKU;\n  const REST_API_URL_GET = process.env.REACT_APP_GET_HEROKU;\n\n  axios.defaults.baseURL = REST_API_URL;\n\n  async function getItem(sort, filter, pagination) {\n    const { data } = await axios.get(REST_API_URL_GET, {\n      params: {\n        order: sort,\n        filterBy: filter,\n        page: pagination,\n      },\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    setAmountOfPages(Math.ceil(data.count / 5));\n    setAmountOfTasks(data.count);\n    setTodos([...data.rows]);\n  }\n\n  async function editItem(item) {\n    await axios({\n      method: \"PATCH\",\n      url: \"/task/patch\",\n      params: {\n        id: item.id,\n      },\n      data: {\n        name: item.name,\n        done: item.done,\n      },\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n    getItem(sortBy, status, currPage);\n  }\n\n  const handlerInputText = (e) => {\n    if (e.key === \"Enter\") {\n      try {\n        if (e.target.value.trim() === \"\") {\n          e.target.value = \"\";\n          throw new Error(\"Write some task\");\n        }\n        e.preventDefault();\n        handlerSubmitTodo(e);\n        setInputText(\"\");\n        e.target.value = \"\";\n      } catch (error) {\n        setErrMessage(error.message);\n        setIsError(true);\n      }\n    } else {\n      setInputText(e.target.value);\n    }\n  };\n\n  const handlerEditText = (e, index) => {\n    if (e.key === \"Enter\") {\n      try {\n        if (e.target.value.trim() === \"\") {\n          e.target.value = \"\";\n          throw new Error(\"Write some task\");\n        }\n        e.preventDefault();\n        setEditInput(\"\");\n        handleChangeItemText(e, index);\n        e.target.value = \"\";\n        e.target.focus();\n        setIsEdit(\"\");\n        getItem(sortBy, status, currPage);\n      } catch (error) {\n        setErrMessage(error.message);\n        setIsError(true);\n      }\n    } else {\n      setEditInput(e.target.value);\n    }\n  };\n\n  const handlerEscapeEdition = (e, index) => {\n    if (e.key === \"Escape\") {\n      let updatedTodos = [...todos];\n      e.preventDefault();\n      setEditInput(inputText);\n      const element = updatedTodos.find((e) => e.id === index);\n      const prevElement = todos.find((e) => e.id === index);\n      element.text = prevElement.text;\n      e.target.value = \"\";\n      e.target.blur();\n      setIsEdit(\"\");\n    }\n  };\n\n  const handlerSubmitTodo = (e) => {\n    async function postItemRequest() {\n      await axios({\n        method: \"POST\",\n        url: \"/task/post\",\n        data: {\n          name: inputText,\n          done: false,\n        },\n        headers: {\n          \"auth-token\": localStorage.getItem(\"token\"),\n        },\n      });\n      getItem(sortBy, status, currPage);\n      console.log(\"posted\");\n    }\n    postItemRequest();\n  };\n\n  const handleChangeItemText = (item, index) => {\n    const task = todos.find((item) => item.id === index);\n    task.name = editInput;\n    editItem(task);\n    getItem(sortBy, status, currPage);\n  };\n\n  const handlerCheckingCheckBox = (item, index) => {\n    const task = todos.find((e) => e.id === index);\n    task.done = item.target.checked;\n    editItem(task);\n    getItem(sortBy, status, currPage);\n  };\n\n  const handlerDeleteItem = (index) => {\n    const deletingItem = todos.find((todo) => todo.id === index);\n\n    async function deleteItem() {\n      await axios({\n        method: \"DELETE\",\n        url: \"/task/delete\",\n        params: {\n          id: deletingItem.id,\n        },\n        headers: {\n          \"auth-token\": localStorage.getItem(\"token\"),\n        },\n      });\n      getItem(sortBy, status, currPage);\n    }\n\n    deleteItem();\n  };\n\n  const handlerPageChange = (e, page) => {\n    setCurrPage(page);\n  };\n\n  const signOut = (e) => {\n    e.preventDefault = false;\n    localStorage.removeItem(\"token\");\n    return <Redirect to=\"react-todo/#/todos\" />;\n  };\n\n  axios.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      if (error) {\n        setErrMessage(error.response.data.errors || error.response.data.error);\n        setIsError(true);\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  const redirectToLogIn = () => {\n    if (\n      errMessage === \"Token is invalid, please log in\" ||\n      errMessage === \"Invalid Token\"\n    ) {\n      return <Redirect to=\"react-todo/#/login\" />;\n    }\n  };\n\n  useEffect(() => {\n    getItem(sortBy, status, currPage);\n  }, []);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"token\")) {\n      return <Redirect to=\"react-todo/#/login\" />;\n    }\n    getItem(sortBy, status, currPage);\n  }, [currPage, status, amountOfPages, sortBy]);\n\n  useEffect(() => {\n    redirectToLogIn();\n  }, [errMessage]);\n\n  return (\n    <section className=\"main-section\">\n      <h1>ToDo List</h1>\n      <InputField handlerInputText={handlerInputText} inputText={inputText} />\n\n      {amountOfTasks >= 1 ? (\n        <div className=\"wrapper\">\n          <Filtering setStatus={setStatus} />\n          <Sorting setSortBy={setSortBy} />\n        </div>\n      ) : null}\n\n      <ListBlock\n        setIsEdit={setIsEdit}\n        isEdit={isEdit}\n        todos={todos}\n        handlerEscapeEdition={handlerEscapeEdition}\n        handlerCheckingCheckBox={handlerCheckingCheckBox}\n        handlerDeleteItem={handlerDeleteItem}\n        handlerEditText={handlerEditText}\n        handleChangeItemText={handleChangeItemText}\n      />\n      {amountOfTasks > 5 ? (\n        <Pages\n          handlerPageChange={handlerPageChange}\n          amountOfPages={amountOfPages}\n        />\n      ) : null}\n      <button\n        onClick={(e) => {\n          signOut(e);\n        }}\n        className=\"button sign-out-btn\"\n      >\n        Sign out\n      </button>\n\n      {isError ? (\n        <Snackbar\n          open={isError}\n          onClose={() => setIsError(false)}\n          autoHideDuration={2000}\n        >\n          <Alert onClose={() => setIsError(false)} severity=\"error\">\n            {errMessage}\n          </Alert>\n        </Snackbar>\n      ) : null}\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport { Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport \"./signup.css\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp(props) {\n  const classes = useStyles();\n\n  const [name, setName] = useState(\"\");\n  const [eMail, setEMail] = useState(\"\");\n  const [pword, setPword] = useState(\"\");\n\n  const [errMessage, setErrMessage] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n\n  axios.defaults.baseURL = process.env.REACT_APP_URL;\n\n  const register = async (e) => {\n    e.preventDefault();\n    await axios({\n      method: \"POST\",\n      url: \"/user/register\",\n      data: {\n        name: name,\n        email: eMail,\n        password: pword,\n      },\n    });\n    return <Redirect to=\"react-todo/#/login\" />;\n  };\n\n  axios.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      if (error) {\n        setErrMessage(error.response.data.errors || error.response.data.error);\n        setIsError(true);\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  return (\n    <div className=\"sign-up-wrapper\">\n      <h1 className=\"sign-in-title\">Sign Up</h1>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <form\n            className={classes.form}\n            noValidate\n            onSubmit={(e) => register(e)}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"Name\"\n                  autoFocus\n                  onChange={(e) => {\n                    setName(e.target.value);\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"off\"\n                  onChange={(e) => {\n                    setEMail(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  // fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={(e) => {\n                    setPword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n\n          {isError ? (\n            <Snackbar\n              open={isError}\n              onClose={() => setIsError(false)}\n              autoHideDuration={2000}\n            >\n              <Alert onClose={() => setIsError(false)} severity=\"error\">\n                {errMessage}\n              </Alert>\n            </Snackbar>\n          ) : null}\n        </div>\n      </Container>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport axios from \"axios\";\n\nimport \"./signin.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const LOGIN_URL = process.env.REACT_APP_LOGIN_HEROKU;\n\n  axios.defaults.baseURL = process.env.REACT_APP_URL;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [errMessage, setErrMessage] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n\n  const login = async (e) => {\n    e.preventDefault();\n    const user = await axios({\n      method: \"POST\",\n      url: \"/user/login\",\n      data: {\n        email: email,\n        password: password,\n      },\n    });\n    localStorage.setItem(\"token\", user.data.accessToken);\n    return <Redirect to=\"react-todo/#/todos\" />;\n  };\n\n  axios.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    (error) => {\n      if (error) {\n        setErrMessage(error.response.data.errors || error.response.data.error);\n        setIsError(true);\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  return (\n    <div className=\"sign-in-wrapper\">\n      <h1 className=\"sign-in-title\">Sign In</h1>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <form className={classes.form} noValidate onSubmit={(e) => login(e)}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"off\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/register\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n          {isError ? (\n            <Snackbar\n              open={isError}\n              onClose={() => setIsError(false)}\n              autoHideDuration={2000}\n            >\n              <Alert onClose={() => setIsError(false)} severity=\"error\">\n                {errMessage}\n              </Alert>\n            </Snackbar>\n          ) : null}\n        </div>\n      </Container>\n    </div>\n  );\n}\n","import ToDoList from \"./ToDoList\";\nimport SignUp from \"./SignUp\";\nimport SignIn from \"./SignIn\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  HashRouter,\n} from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/login\">\n        <Router>\n          <Switch>\n            <Route path=\"/todos\">\n              <ToDoList />\n            </Route>\n            <Route path=\"/login\">\n              <SignIn />\n            </Route>\n            <Route path=\"/register\">\n              <SignUp />\n            </Route>\n          </Switch>\n        </Router>\n      </HashRouter>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}