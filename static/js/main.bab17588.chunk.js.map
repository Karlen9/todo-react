{"version":3,"sources":["components/DeleteSelected/DeleteSelected.js","components/Filtering/Filtering.js","components/InputField/InputField.js","components/ListBlock/ListBlock.js","components/Sorting/Sorting.js","components/Pages/Pages.js","ToDoList.js","App.js","index.js"],"names":["DeleteSelected","props","className","onClick","e","handlerDeleteSelectedItems","handlerDeleteAllServerItems","value","handlerDeleteAllItems","Filtering","setStatus","InputField","TextField","onChange","handlerInputText","onKeyPress","type","autoComplete","id","label","variant","ListBlock","List","width","filteredTodos","map","todo","ListItem","ListItemIcon","Checkbox","checked","completed","handlerCheckingCheckBox","color","ListItemText","primary","text","isEditing","onKeyDown","handlerEscapeEdition","handlerEditText","date","split","IconButton","handlerCheckIsEditing","edge","aria-label","handlerDeleteItem","Sorting","Button","handlerSortDateToUp","size","handlerSortDateToDown","Pages","handlerPageChange","amountOfPages","Pagination","count","ToDoList","useState","inputText","setInputText","editInput","setEditInput","todos","setTodos","setFilteredTodos","status","inputVisible","setInputVisible","isEmpty","setIsEmpty","currPage","setCurrPage","setAmountOfPages","sortTrigger","setSortTrigger","errMessage","setErrMessage","isError","setIsError","API_URL","process","handlerSubmitTodo","a","console","log","name","done","axios","post","getItem","postItemRequest","get","params","order","filterBy","data","item","index","createdAt","uuid","handleChangeItemText","editingItem","find","editItemRequest","itemName","patch","handlerFilterTodos","page","cPage","slice","filter","handlerPageCounter","stat","Math","ceil","length","interceptors","response","use","error","message","Promise","reject","useEffect","key","target","trim","alert","preventDefault","updatedTodos","element","prevElement","deletingItem","delete","deleteItem","i","Snackbar","open","onClose","autoHideDuration","Alert","severity","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8XAGe,SAASA,EAAeC,GAGrC,OACE,sBAAKC,UAAU,iBAAf,UACE,wBAAQA,UAAU,yBAAyBC,QAAU,SAACC,GAAD,OAAOH,EAAMI,2BAA2BD,IAA7F,2BACA,wBAAQF,UAAU,2BAA2BC,QAAS,kBAAOF,EAAMK,+BAAgCC,MAAM,UAAzG,qCACA,wBAAQL,UAAU,oBAAoBC,QAAS,kBAAOF,EAAMO,yBAA0BD,MAAM,UAA5F,2B,OCRS,SAASE,EAAUR,GAChC,OACE,8BACG,sBAAKC,UAAU,gBAAf,UACG,wBAAQA,UAAU,oBAAoBC,QAAS,kBAAOF,EAAMS,UAAU,QAASH,MAAM,MAArF,iBACA,wBAAQL,UAAU,qBAAqBC,QAAS,kBAAMF,EAAMS,UAAU,SAASH,MAAM,OAArF,kBACA,wBAAQL,UAAU,uBAAuBC,QAAS,kBAAMF,EAAMS,UAAU,WAAWH,MAAM,SAAzF,yB,oBCLK,SAASI,EAAWV,GACjC,OACE,qBAAKC,UAAU,QAAf,SACE,cAACU,EAAA,EAAD,CAAWC,SAAWZ,EAAMa,iBAAmBC,WAAad,EAAMa,iBAAmBE,KAAK,OAAOC,aAAc,MAAMf,UAAU,aAAagB,GAAG,iBAAiBC,MAAM,eAAeC,QAAQ,e,mGCOpL,SAASC,EAAUpB,GAChC,OACE,qBAAKC,UAAU,OAAf,SACE,cAACoB,EAAA,EAAD,CAAMC,MAAM,OAAZ,SACEtB,EAAMuB,cAAcC,KAAI,SAACC,GAAD,OACxB,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAUC,QAASJ,EAAKK,UAAW5B,QAAU,SAACC,GAAD,OAAOH,EAAM+B,wBAAwB5B,EAAGsB,EAAKR,KAAKe,MAAM,cAEvG,cAACC,EAAA,EAAD,CAAcC,QAAST,EAAKU,OAC1BV,EAAKW,UAAY,cAACzB,EAAA,EAAD,CAAWV,UAAU,aAAaoC,UAAW,SAAClC,GAAD,OAAOH,EAAMsC,qBAAqBnC,EAAGsB,EAAKR,KAAKL,SAAW,SAACT,GAAD,OAAOH,EAAMuC,gBAAgBpC,IAAKW,WAAa,SAACX,GAAOH,EAAMuC,gBAAgBpC,EAAGsB,EAAKR,OAAY,KAC3N,mBAAGhB,UAAU,OAAb,SAAqBwB,EAAKe,KAAKC,MAAM,KAAK,KAC1C,cAACC,EAAA,EAAD,CAAYxC,QAAS,SAACC,GAAD,OAAOH,EAAM2C,sBAAsBxC,EAAGsB,EAAKR,KAAM2B,KAAK,MAAMC,aAAW,WAA5F,SACE,cAAC,IAAD,CAAkB3C,QAAS,SAACC,GAAD,OAAOH,EAAM2C,sBAAsBxC,EAAGsB,EAAKR,SAExE,cAACyB,EAAA,EAAD,CAAYxC,QAAU,SAACC,GAAD,OAAOH,EAAM8C,kBAAkB3C,EAAGsB,EAAKR,KAAO2B,KAAK,MAAMC,aAAW,WAA1F,SACE,cAAC,IAAD,QAXWpB,EAAKR,W,4BCbb,SAAS8B,EAAQ/C,GAC9B,OACE,8BACG,sBAAKC,UAAU,OAAf,UACG,mDACA,sBAAKA,UAAU,SAAf,UACE,cAAC+C,EAAA,EAAD,CAAQ9C,QAAS,kBAAMF,EAAMiD,uBAAuB9B,QAAQ,YAA5D,SACE,cAAC,IAAD,CAAWlB,UAAU,WAAWiD,KAAK,WAEvC,cAACF,EAAA,EAAD,CAAQ9C,QAAS,kBAAMF,EAAMmD,yBAAwBhC,QAAQ,YAA7D,SACE,cAAC,IAAD,CAAalB,UAAU,aAAaiD,KAAK,mB,oBCZxC,SAASE,EAAT,GAAoD,IAApCC,EAAmC,EAAnCA,kBAAmBC,EAAgB,EAAhBA,cAChD,OACE,cAACC,EAAA,EAAD,CACE3C,SAAUyC,EACVG,MAAOF,I,+BCQE,SAASG,IAAY,IAAD,EACCC,mBAAS,IADV,mBAC1BC,EAD0B,KACfC,EADe,OAECF,mBAAS,IAFV,mBAE1BG,EAF0B,KAEfC,EAFe,OAGPJ,mBAAS,IAHF,mBAG1BK,EAH0B,KAGnBC,EAHmB,OAKSN,mBAAS,YAAIK,IALtB,mBAK1BxC,EAL0B,KAKX0C,EALW,OAMLP,mBAAS,OANJ,mBAM1BQ,EAN0B,KAMlBzD,EANkB,OAOOiD,oBAAS,GAPhB,mBAO1BS,EAP0B,KAOZC,EAPY,OAQHV,oBAAS,GARN,mBAQ1BW,EAR0B,KAQjBC,EARiB,OASDZ,mBAAS,GATR,mBAS1Ba,EAT0B,KAShBC,EATgB,OAUSd,mBAAS,GAVlB,mBAU1BJ,EAV0B,KAUXmB,EAVW,OAWKf,mBAAS,OAXd,mBAW1BgB,EAX0B,KAWbC,GAXa,QAYGjB,mBAAS,IAZZ,qBAY1BkB,GAZ0B,MAYdC,GAZc,SAaHnB,oBAAS,GAbN,qBAa1BoB,GAb0B,MAajBC,GAbiB,MAe3BC,GAAUC,4CA8CVC,GAAoB,SAAC/E,GAAM,4CAQ/B,4BAAAgF,EAAA,6DAEIC,QAAQC,IAAI,UACN5D,EAAO,CAAC6D,KAAM3B,EAAW4B,MAAM,EAAOnD,WAAW,GAH3D,SAIsBoD,IAAMC,KAAKT,GAAU,QAAUvD,GAJrD,cAKIiE,KALJ,4CAR+B,0DAkB/BC,IA/E+B,SAkFlBD,KAlFkB,8EAkFjC,8BAAAP,EAAA,sEAGyBK,IAAMI,IAAIZ,GAAS,SAAU,CAChDa,OAAO,CACLC,MAAOpB,EACPqB,SAAU7B,KANlB,gBAGW8B,EAHX,EAGWA,KAKPZ,QAAQC,IAAIW,GACdhC,EAASgC,EAAKxE,KAAI,SAACyE,EAAMC,GAAP,MAAmB,CAACjF,GAAIiF,EAAO/D,KAAM8D,EAAKX,KAAMxD,UAAWmE,EAAKV,KAAM/C,KAAMyD,EAAKE,UAAWC,KAAMH,EAAKG,KAAMhE,UAAW6D,EAAK7D,eATjJ,4CAlFiC,sBAiGjC,IAmBMiE,GAAuB,SAAClG,EAAG+F,GAQ/B,IAAMI,EAAcvC,EAAMwC,MAAK,SAAApG,GAAC,OAAIA,EAAEc,KAAOiF,MA5Hd,uCA8H/BM,CAAgBF,EAAazC,GAE7ByC,EAAYlE,WAAY,EAExBsD,MAlI+B,8CAsIjC,WAA+BO,EAAMQ,GAArC,SAAAtB,EAAA,sEAEUK,IAAMkB,MAAM1B,GAAU,QAAUiB,EAAKG,KACzC,CACEd,KAAMmB,IAJd,4CAtIiC,sBAmJjC,IAuDME,GAAqB,SAArBA,EAAsBzC,EAAQ0C,GAClC,IAAMC,EAAQD,EAAO,EACrB,OAAO1C,GACL,IAAK,MACHD,EAAiB,YAAIF,EAAM+C,MAAc,EAARD,EAAmB,EAARA,EAAY,KACxDpG,EAAU,OAEV,MACF,IAAK,OACHwD,EAAiB,YAAIF,EAAMgD,QAAO,SAAA5G,GAAC,OAAoB,IAAhBA,EAAE2B,aAAoBgF,MAAc,EAARD,EAAmB,EAARA,EAAY,KAC1FpG,EAAU,QACVkG,IAEA,MACF,IAAK,SACH1C,EAAiB,YAAIF,EAAMgD,QAAO,SAAA5G,GAAC,OAAoB,IAAhBA,EAAE2B,aAAqBgF,MAAc,EAARD,EAAmB,EAARA,EAAY,KAC3FpG,EAAU,UACVkG,MAiBAK,GAAqB,SAACC,GAC1B,OAAOA,GACL,IAAK,MACHxC,EAAiByC,KAAKC,KAAKpD,EAAMqD,OAAS,IAC1C,MACF,IAAK,OACH3C,EAAiByC,KAAKC,KAAKpD,EAAMgD,QAAO,SAAA5G,GAAC,OAAoB,IAAhBA,EAAE2B,aAAoBsF,OAAS,IAC5E,MACF,IAAK,SACH3C,EAAiByC,KAAKC,KAAKpD,EAAMgD,QAAO,SAAA5G,GAAC,OAAoB,IAAhBA,EAAE2B,aAAqBsF,OAAS,MAyFnF,OA5DA5B,IAAM6B,aAAaC,SAASC,KAAI,SAAUD,GAExC,OAAOA,KACN,SAACE,GAKF,OAJIA,EAAMF,WACRzC,GAAc2C,EAAMF,SAAStB,KAAKyB,SAClC1C,IAAW,IAEN2C,QAAQC,OAAOH,MAoBxBI,qBAAU,WACRjB,GAAmBzC,EAAQK,KAE1B,CAACR,EAAOG,IAGX0D,qBAAU,WAlNa,IAAjB7D,EAAMqD,OACR9C,GAAW,GACQ,IAAVP,GACTO,GAAW,KAiNZ,CAACP,IAEJ6D,qBAAU,cAEP,IAMHA,qBAAU,WACRjB,GAAmBzC,EAAQK,KAC1B,CAACA,IAEJqD,qBAAU,WACRjB,GAAmBzC,EAAQK,GAC3BC,EAAY,KAEX,CAACN,IAEJ0D,qBAAU,WACRZ,GAAmB9C,KAClB,CAACA,EAAQH,IAGV,0BAAS9D,UAAU,eAAnB,UACE,sCACA,cAACS,EAAD,CACEG,iBAjUmB,SAACV,GACX,UAAVA,EAAE0H,IAC0B,KAA1B1H,EAAE2H,OAAOxH,MAAMyH,OAChBC,MAAM,uBAEN7H,EAAE8H,iBACF/C,GAAkB/E,GAClByD,EAAa,IACbzD,EAAE2H,OAAOxH,MAAQ,IAInBsD,EAAazD,EAAE2H,OAAOxH,QAsTpBqD,UAAYA,IAEXU,EAKM,KALI,sBAAKpE,UAAU,UAAf,UACX,cAACO,EAAD,CACEC,UAAaA,IAEf,cAACsC,EAAD,CAASE,oBAhPa,WAC1B0B,GAAe,OACfe,MA8OuDvC,sBA1O3B,WAC5BwB,GAAe,QACfe,WA2OE,cAACtE,EAAD,CACEkB,qBA5SuB,SAACnC,EAAG+F,GAC/B,GAAa,WAAV/F,EAAE0H,IAAkB,CACrB,IAAIK,EAAY,YAAOnE,GACvB5D,EAAE8H,iBACFnE,EAAaH,GACb,IAAMwE,EAAUD,EAAa3B,MAAK,SAAApG,GAAC,OAAIA,EAAEc,KAAOiF,KAC1CkC,EAAcrE,EAAMwC,MAAM,SAAApG,GAAC,OAAIA,EAAEc,KAAOiF,KAC9CiC,EAAQhG,KAAOiG,EAAYjG,KAC3BgG,EAAQ/F,WAAY,IAqSlBO,sBA1HwB,SAACxC,EAAG+F,GAChC,IAAIgC,EAAY,YAAOnE,GACDmE,EAAa3B,MAAK,SAAApG,GAAC,OAAIA,EAAEc,KAAOiF,KACxC9D,WAAY,EAC1B4B,EAAS,YAAIkE,IACb9D,GAAgB,IAsHZrC,wBA5M0B,SAAC5B,EAAG+F,GAClC,IAAIgC,EAAY,YAAOnE,GACDmE,EAAa3B,MAAK,SAAApG,GAAC,OAAIA,EAAEc,KAAOiF,KACxCpE,UAAY3B,EAAE2H,OAAOjG,QACnCmC,EAAS,YAAIkE,KAyMTpF,kBAtMoB,SAAC3C,EAAG+F,GAM5B,IAAMmC,EAAetE,EAAMwC,MAAK,SAAApG,GAAC,OAAIA,EAAEc,KAAOiF,KANR,4CAQtC,sBAAAf,EAAA,sEAE0BK,IAAM8C,OAAOtD,GAAU,SAAWqD,EAAajC,MAFzE,cAGIV,KAHJ,4CARsC,0DAkBtC6C,IAqLIhH,cAAiBA,EACjB4C,aAAcA,EACd5B,gBAlUkB,SAACpC,EAAG+F,GACb,UAAV/F,EAAE0H,IAC0B,KAA1B1H,EAAE2H,OAAOxH,MAAMyH,OAChBC,MAAM,uBAEN7H,EAAE8H,iBACFnE,EAAa,IACbuC,GAAqBlG,EAAG+F,GACxB/F,EAAE2H,OAAOxH,MAAQ,IAInBwD,EAAa3D,EAAE2H,OAAOxH,QAuTpB+F,qBAAsBA,KAIrBhC,EAIE,KAJQ,cAACjB,EAAD,CACX4D,mBAAoBA,GACpB3D,kBA9GoB,SAAClD,EAAGyG,GAC5BpC,EAAYoC,IA8GRtD,cAAeA,IAGde,EAMM,KANI,qBAAKpE,UAAU,sBAAf,SACX,cAACF,EAAD,CACEM,4BA7L4B,WAEhC,IAFuC,IAAD,WAE9BmI,GACN,IAAMH,EAAetE,EAAMwC,MAAK,SAAApG,GAAC,OAAIA,EAAEc,KAAOuH,KAHV,4CAKpC,sBAAArD,EAAA,sEACwBK,IAAM8C,OAAOtD,GAAU,SAAWqD,EAAajC,MADvE,cAEEV,KAFF,4CALoC,0DASpC6C,IAPMC,EAAI,EAAGA,EAAIzE,EAAMqD,OAAQoB,IAAM,EAA/BA,IA4LJjI,sBAlMsB,WAC5ByD,EAAS,KAkMH5D,2BA/K2B,SAACD,GAClCA,EAAE8H,iBACF,IAAIC,EAAY,YAAOnE,GACvBmE,EAAeA,EAAanB,QAAO,SAAA5G,GAAC,OAAoB,IAAhBA,EAAE2B,aAC1CkC,EAAS,YAAIkE,SA+KTpD,GACF,cAAC2D,EAAA,EAAD,CACEC,KAAM5D,GACN6D,QAAS,kBAAM5D,IAAW,IAC1B6D,iBAAkB,IAHpB,SAKE,cAACC,EAAA,EAAD,CAAOF,QAAS,kBAAM5D,IAAW,IAAQ+D,SAAS,QAAlD,SACGlE,OAGH,QC5YO,SAASmE,IACtB,OACE,qBAAK9I,UAAU,MAAf,SACG,cAAC,EAAD,MCDP+I,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,U","file":"static/js/main.bab17588.chunk.js","sourcesContent":["import './deleteSelected.css';\n\n\nexport default function DeleteSelected(props) {\n  \n  \n  return(\n    <div className=\"delete-section\">\n      <button className=\"button selected-button\" onClick={ (e) => props.handlerDeleteSelectedItems(e)}>Delete select</button>\n      <button className=\"button all-server-button\" onClick={() =>  props.handlerDeleteAllServerItems() } value=\"del-all\" >Delete all server items</button>\n      <button className=\"button all-button\" onClick={() =>  props.handlerDeleteAllItems() } value=\"del-all\" >Delete all</button>\n\n    </div>\n  )\n}","import './filtering.css';\n\nexport default function Filtering(props) {  \n  return (\n    <div>\n       <div className=\"selection-bar\">\n          <button className=\"button all-button\" onClick={() =>  props.setStatus(\"all\") } value=\"all\" >All</button>\n          <button className=\"button done-button\" onClick={() => props.setStatus(\"done\")} value=\"done\">Done</button>\n          <button className=\"button undone-button\" onClick={() => props.setStatus(\"undone\")} value=\"undone\">Undone</button>\n        </div>\n    </div>\n  );\n}","import TextField from '@material-ui/core/TextField';\nimport './inputfield.css';\n\nexport default function InputField(props) {  \n  return (\n    <div className=\"input\">\n      <TextField onChange={ props.handlerInputText } onKeyPress={ props.handlerInputText } type=\"text\" autoComplete= \"off\" className=\"main-input\" id=\"outlined-basic\" label=\"I want to...\" variant=\"outlined\"/>\n    </div>\n  );\n}\n","import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport TextField from '@material-ui/core/TextField';\n\n//import ToDoList from '../../ToDoList';\nimport './listblock.css';\n\nexport default function ListBlock(props) {\n  return (\n    <div className=\"list\">\n      <List width=\"100%\">\n      { props.filteredTodos.map((todo) => (\n        <ListItem key={todo.id} >\n          <ListItemIcon>\n            <Checkbox checked={todo.completed} onClick={ (e) => props.handlerCheckingCheckBox(e, todo.id)} color=\"primary\"/>\n          </ListItemIcon>\n          <ListItemText primary={todo.text} />\n          { todo.isEditing ? <TextField className=\"edit-input\" onKeyDown={(e) => props.handlerEscapeEdition(e, todo.id)} onChange={ (e) => props.handlerEditText(e) } onKeyPress={ (e) => {props.handlerEditText(e, todo.id); }}/> : null }\n          <p className=\"date\">{todo.date.split('T')[0]}</p>\n          <IconButton onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}  edge=\"end\" aria-label=\"comments\">\n            <EditOutlinedIcon onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}/>  \n          </IconButton>\n          <IconButton onClick={ (e) => props.handlerDeleteItem(e, todo.id) }  edge=\"end\" aria-label=\"comments\">\n            <DeleteIcon />\n          </IconButton>\n        </ListItem>\n        )) }\n      </List>\n      </div>\n  );\n}","import Button from '@material-ui/core/Button';\nimport { ImArrowUp } from 'react-icons/im';\nimport { ImArrowDown } from 'react-icons/im';\nimport './sorting.css';\n\nexport default function Sorting(props) {  \n  return (\n    <div>\n       <div className=\"sort\">\n          <h3>Sort by Dаte</h3>\n          <div className=\"arrows\">\n            <Button onClick={() => props.handlerSortDateToUp()} variant=\"contained\">\n              <ImArrowUp className=\"up-arrow\" size=\"1rem\"/>\n            </Button>\n            <Button onClick={() => props.handlerSortDateToDown()}variant=\"contained\">\n              <ImArrowDown className=\"down-arrow\" size=\"1rem\"/>\n            </Button>\n          </div>\n        </div>\n    </div>\n  );\n}\n","import './pages.css';\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nexport default function Pages({handlerPageChange, amountOfPages}) {\n  return (\n    <Pagination \n      onChange={handlerPageChange}\n      count={amountOfPages}\n    />\n  )\n}","//imports\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport DeleteSelected from './components/DeleteSelected/DeleteSelected';\nimport Filtering from './components/Filtering/Filtering';\nimport InputField from './components/InputField/InputField';\nimport ListBlock from './components/ListBlock/ListBlock';\nimport Sorting from './components/Sorting/Sorting';\nimport Pages from './components/Pages/Pages';\nimport { IconButton, Snackbar } from '@material-ui/core';\nimport './ToDoList.css';\nimport Alert from '@material-ui/lab/Alert';\nimport { CommentSharp } from '@material-ui/icons';\n\n\nexport default function ToDoList() {\n  const [inputText, setInputText] = useState('');\n  const [editInput, setEditInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  //const [todoId, setTodoId] = useState(0);\n  const [filteredTodos, setFilteredTodos] = useState([...todos]);\n  const [status, setStatus] = useState('all');\n  const [inputVisible, setInputVisible] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [currPage, setCurrPage] = useState(1);\n  const [amountOfPages, setAmountOfPages] = useState(1);\n  const [sortTrigger, setSortTrigger] = useState('asc');\n  const [errMessage, setErrMessage] = useState('');\n  const [isError, setIsError] = useState(false);\n\n  const API_URL = process.env.REACT_APP_URL;\n\n  const handlerInputText = (e) => {\n    if(e.key === 'Enter') {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        handlerSubmitTodo(e);\n        setInputText('');\n        e.target.value = '';\n      }\n    }\n    else {\n      setInputText(e.target.value);\n    }\n  };\n\n  const handlerEditText = (e, index) => {\n    if(e.key === 'Enter') {\n      if(e.target.value.trim() === '') {\n        alert('Write some task...');\n      } else {\n        e.preventDefault();\n        setEditInput('');\n        handleChangeItemText(e, index);\n        e.target.value = '';\n      }\n    }\n    else {\n      setEditInput(e.target.value);\n    }\n  };\n\n  const handlerEscapeEdition = (e, index) => {\n    if(e.key === 'Escape') {\n      let updatedTodos = [...todos];\n      e.preventDefault();\n      setEditInput(inputText);\n      const element = updatedTodos.find(e => e.id === index);\n      const prevElement = todos.find( e => e.id === index);\n      element.text = prevElement.text;\n      element.isEditing = false;\n    }\n  }\n\n  const handlerSubmitTodo = (e) => {\n    // e.preventDefault();\n    // setTodos([\n    //   ...todos, { text: inputText, completed: false, id: todoId, date: new Date(), } \n    // ]);\n    // setTodoId(todoId + 1);\n    // setStatus(\"all\");\n\n    async function postItemRequest() {\n      //try {\n        console.log('posted');\n        const todo = {name: inputText, done: false, isEditing: false};\n        const res = await axios.post(API_URL + '/task' , todo);\n        getItem();\n      //} catch (error) {\n        //handlerErrors(error);\n      //}\n    }\n    postItemRequest();\n  };\n\n  async function getItem() {\n\n    //try {\n      const {data} = await axios.get(API_URL, '/tasks', {\n        params:{\n          order: sortTrigger, \n          filterBy: status\n      }});\n      console.log(data);\n    setTodos(data.map((item, index) => ( {id: index, text: item.name, completed: item.done, date: item.createdAt, uuid: item.uuid, isEditing: item.isEditing})));\n    //} catch (error) {\n      //handlerErrors(error);\n    //}\n  }\n\n  const handlerSetEmptiness = () => {\n    if (todos.length === 0) {\n      setIsEmpty(true);\n    } else if (todos !== 0){\n      setIsEmpty(false);\n    }\n  };\n\n  const handlerSortDateToUp = () => {\n    setSortTrigger('asc');\n    getItem();\n\n  };\n\n  const handlerSortDateToDown = () => {\n    setSortTrigger('desc');\n    getItem();\n  };\n\n  const handleChangeItemText = (e, index) => {\n    // e.preventDefault();\n    // let updatedTodos = [...todos];\n    // const completedTodo = updatedTodos.find((e) => e.id === index);\n    // completedTodo.text = editInput;\n    // completedTodo.isEditing = false;\n    // setTodos([...updatedTodos]);\n\n    const editingItem = todos.find(e => e.id === index);\n\n    editItemRequest(editingItem, editInput);\n\n    editingItem.isEditing = false;\n\n    getItem();\n\n  };\n\n  async function editItemRequest(item, itemName) {\n    //try {\n      await axios.patch(API_URL + 'task/' + item.uuid,\n        {\n          name: itemName\n        }\n      );\n    //} catch (error) {\n      //handlerErrors(error);\n    //}\n    \n  }\n\n  const handlerCheckingCheckBox = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    completedTodo.completed = e.target.checked;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerDeleteItem = (e, index) => {\n    // e.preventDefault();\n    // let updatedTodos = [...todos];\n    // updatedTodos = updatedTodos.filter( el => el.id !== index);\n    // setTodos([...updatedTodos]);\n\n    const deletingItem = todos.find(e => e.id === index);\n\n    async function deleteItem() {\n      //try {\n        const element = await axios.delete(API_URL + '/task/' + deletingItem.uuid);\n        getItem();\n      //} catch (error) {\n        //handlerErrors(error);\n      //}\n\n    }\n\n    deleteItem();\n  };\n\n  const handlerDeleteAllItems = () => {\n    setTodos([]);\n  };\n\n  const handlerDeleteAllServerItems = () => {\n    //try {\n      for(let i = 0; i < todos.length; i++) {\n        const deletingItem = todos.find(e => e.id === i);\n  \n        async function deleteItem() {\n          const element = await axios.delete(API_URL + '/task/' + deletingItem.uuid);\n          getItem();\n        }\n        deleteItem();\n      }\n   // } catch (error) {\n      //handlerErrors(error);\n    //}\n  };\n\n  const handlerDeleteSelectedItems = (e) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    updatedTodos = updatedTodos.filter(e => e.completed === false);\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerFilterTodos = (status, page) => {\n    const cPage = page - 1;\n    switch(status) {\n      case 'all':\n        setFilteredTodos([...todos.slice(cPage * 5, cPage * 5 + 5)]);\n        setStatus('all');\n\n        break;\n      case 'done':\n        setFilteredTodos([...todos.filter(e => e.completed === true).slice(cPage * 5, cPage * 5 + 5)]);\n        setStatus('done');\n        handlerFilterTodos();\n\n        break;\n      case 'undone':\n        setFilteredTodos([...todos.filter(e => e.completed === false).slice(cPage * 5, cPage * 5 + 5)]);\n        setStatus('undone');\n        handlerFilterTodos();\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handlerCheckIsEditing = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find(e => e.id === index);\n    completedTodo.isEditing = true;\n    setTodos([...updatedTodos]);\n    setInputVisible(true);\n  };  \n\n  const handlerPageCounter = (stat) => {\n    switch(stat) {\n      case \"all\":\n        setAmountOfPages(Math.ceil(todos.length / 5));\n        break;\n      case \"done\":\n        setAmountOfPages(Math.ceil(todos.filter(e => e.completed === true).length / 5));\n        break;\n      case \"undone\":\n        setAmountOfPages(Math.ceil(todos.filter(e => e.completed === false).length / 5));\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handlerPageChange = (e, page) => {\n    setCurrPage(page);\n  };\n\n  const handlerErrors = (err) => {\n    if(err.response) {\n      setIsError(true);\n      console.log(errMessage);\n\n      console.log(isError);\n\n      setErrMessage(err.message);\n    } else if(err.request) {\n      setIsError(true);\n      console.log(isError);\n      console.log(errMessage);\n\n      setErrMessage('Problem with Request!');\n    } \n  };\n\n\n  axios.interceptors.response.use(function (response) {\n    // Do something before request is sent\\\n    return response;\n  }, (error) => {\n    if (error.response){\n      setErrMessage(error.response.data.message);\n      setIsError(true);\n    }\n    return Promise.reject(error);\n  });\n\n\n  //localStorage\n  \n  // const saveLocalTodos = () => {\n  //   localStorage.setItem(\"todos\", JSON.stringify(todos));\n  // };  //\n\n  // const getLocalTodos = () => {\n  //   if (localStorage.getItem(\"todos\") === null) {\n  //     localStorage.setItem(\"todos\", JSON.stringify([]));\n  //   } else {\n  //     let todosLocal = JSON.parse(locatest\n  // useEffect(() => {\n  //   //getLocalTodos();\n  // }, []);\n\n  \n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n    //saveLocalTodos();\n  }, [todos, status]);\n\n\n  useEffect(() => {\n    handlerSetEmptiness();\n  }, [todos]);\n\n  useEffect(() => {\n\n  }, []);\n\n  // useEffect(() => {\n  //   setIsError(true);\n  // }, [errMessage]);\n\n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n  }, [currPage]);\n\n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n    setCurrPage(1);\n\n  }, [status]);\n\n  useEffect(() => {\n    handlerPageCounter(status);\n  }, [status, todos]);\n  \n  return (\n    <section className='main-section'>\n      <h1>ToDo</h1>\n      <InputField\n        handlerInputText = {handlerInputText}\n        inputText= {inputText}\n      />\n      { !isEmpty ? <div className='wrapper'>\n        <Filtering \n          setStatus = {setStatus}\n        />\n        <Sorting handlerSortDateToUp={handlerSortDateToUp} handlerSortDateToDown={handlerSortDateToDown}/>\n      </div> : null}\n      \n      <ListBlock \n        handlerEscapeEdition={handlerEscapeEdition}\n        handlerCheckIsEditing = {handlerCheckIsEditing} \n        handlerCheckingCheckBox = {handlerCheckingCheckBox}\n        handlerDeleteItem = {handlerDeleteItem}\n        filteredTodos = {filteredTodos}\n        inputVisible={inputVisible}\n        handlerEditText={handlerEditText}\n        handleChangeItemText={handleChangeItemText}\n        \n      />  \n\n      { !isEmpty ? <Pages\n        handlerPageCounter={handlerPageCounter}\n        handlerPageChange={handlerPageChange}\n        amountOfPages={amountOfPages}\n      /> : null }\n\n      { !isEmpty ? <div className='delete-main-section'>\n        <DeleteSelected \n          handlerDeleteAllServerItems={handlerDeleteAllServerItems}\n          handlerDeleteAllItems={handlerDeleteAllItems}\n          handlerDeleteSelectedItems={handlerDeleteSelectedItems}\n        />\n      </div> : null}\n       \n      { isError ? \n      <Snackbar \n        open={isError} \n        onClose={() => setIsError(false)}\n        autoHideDuration={5000}\n        >\n        <Alert onClose={() => setIsError(false)} severity=\"error\">\n          {errMessage} \n        </Alert>\n      </Snackbar>\n      : null }\n    </section> \n  );\n}\n \n","\nimport ToDoList from './ToDoList';\n\nexport default function App() {  \n  return (\n    <div className=\"App\">\n       <ToDoList/>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}