{"version":3,"sources":["components/DeleteSelected/DeleteSelected.js","components/Filtering/Filtering.js","components/InputField/InputField.js","components/ListBlock/ListBlock.js","components/Sorting/Sorting.js","components/Pages/Pages.js","ToDoList.js","App.js","index.js"],"names":["DeleteSelected","props","className","onClick","e","handlerDeleteSelectedItems","handlerDeleteAllServerItems","value","handlerDeleteAllItems","Filtering","setStatus","InputField","TextField","onChange","handlerInputText","onKeyPress","type","autoComplete","id","label","variant","ListBlock","List","width","filteredTodos","map","todo","ListItem","ListItemIcon","Checkbox","checked","completed","handlerCheckingCheckBox","color","ListItemText","primary","text","isEditing","onKeyDown","handlerEscapeEdition","handlerEditText","date","split","IconButton","handlerCheckIsEditing","edge","aria-label","handlerDeleteItem","Sorting","Button","handlerSortDateToUp","size","handlerSortDateToDown","Pages","handlerPageChange","amountOfPages","Pagination","count","ToDoList","useState","inputText","setInputText","editInput","setEditInput","todos","setTodos","setFilteredTodos","status","inputVisible","setInputVisible","isEmpty","setIsEmpty","currPage","setCurrPage","setAmountOfPages","sortTrigger","setSortTrigger","errMessage","setErrMessage","isError","setIsError","API_URL","process","REACT_APP_BASE_URL","API_URL_GET","REACT_APP_GET_URL","handlerSubmitTodo","a","console","log","name","done","axios","post","getItem","postItemRequest","get","params","order","filterBy","page","data","rows","item","index","createdAt","uuid","handleChangeItemText","editingItem","find","editItemRequest","itemName","patch","handlerFilterTodos","cPage","slice","filter","handlerPageCounter","stat","Math","ceil","length","interceptors","response","use","error","message","Promise","reject","useEffect","key","target","trim","alert","preventDefault","updatedTodos","element","prevElement","deletingItem","delete","deleteItem","i","Snackbar","open","onClose","autoHideDuration","Alert","severity","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1616beb6.chunk.js","sourcesContent":["import './deleteSelected.css';\n\n\nexport default function DeleteSelected(props) {\n  \n  \n  return(\n    <div className=\"delete-section\">\n      <button className=\"button selected-button\" onClick={ (e) => props.handlerDeleteSelectedItems(e)}>Delete select</button>\n      <button className=\"button all-server-button\" onClick={() =>  props.handlerDeleteAllServerItems() } value=\"del-all\" >Delete all server items</button>\n      <button className=\"button all-button\" onClick={() =>  props.handlerDeleteAllItems() } value=\"del-all\" >Delete all</button>\n\n    </div>\n  )\n}","import './filtering.css';\n\nexport default function Filtering(props) {  \n  return (\n    <div>\n       <div className=\"selection-bar\">\n          <button className=\"button all-button\" onClick={() =>  props.setStatus(\"all\") } value=\"all\" >All</button>\n          <button className=\"button done-button\" onClick={() => props.setStatus(\"done\")} value=\"done\">Done</button>\n          <button className=\"button undone-button\" onClick={() => props.setStatus(\"undone\")} value=\"undone\">Undone</button>\n        </div>\n    </div>\n  );\n}","import TextField from '@material-ui/core/TextField';\nimport './inputfield.css';\n\nexport default function InputField(props) {  \n  return (\n    <div className=\"input\">\n      <TextField onChange={ props.handlerInputText } onKeyPress={ props.handlerInputText } type=\"text\" autoComplete= \"off\" className=\"main-input\" id=\"outlined-basic\" label=\"I want to...\" variant=\"outlined\"/>\n    </div>\n  );\n}\n","import List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport TextField from \"@material-ui/core/TextField\";\n\n//import ToDoList from '../../ToDoList';\nimport \"./listblock.css\";\n\nexport default function ListBlock(props) {\n  return (\n    <div className=\"list\">\n      <List width=\"100%\">\n        {props.filteredTodos.map((todo) => (\n          <ListItem key={todo.id}>\n            <ListItemIcon>\n              <Checkbox\n                checked={todo.completed}\n                onClick={(e) => props.handlerCheckingCheckBox(e, todo.id)}\n                color=\"primary\"\n              />\n            </ListItemIcon>\n            <ListItemText primary={todo.text} />\n            {todo.isEditing ? (\n              <TextField\n                className=\"edit-input\"\n                onKeyDown={(e) => props.handlerEscapeEdition(e, todo.id)}\n                onChange={(e) => props.handlerEditText(e)}\n                onKeyPress={(e) => {\n                  props.handlerEditText(e, todo.id);\n                }}\n              />\n            ) : null}\n            <p className=\"date\">{todo.date.split(\"T\")[0]}</p>\n            <IconButton\n              onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}\n              edge=\"end\"\n              aria-label=\"comments\"\n            >\n              <EditOutlinedIcon\n                onClick={(e) => props.handlerCheckIsEditing(e, todo.id)}\n              />\n            </IconButton>\n            <IconButton\n              onClick={(e) => props.handlerDeleteItem(e, todo.id)}\n              edge=\"end\"\n              aria-label=\"comments\"\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n","import Button from '@material-ui/core/Button';\nimport { ImArrowUp } from 'react-icons/im';\nimport { ImArrowDown } from 'react-icons/im';\nimport './sorting.css';\n\nexport default function Sorting(props) {  \n  return (\n    <div>\n       <div className=\"sort\">\n          <h3>Sort by Dаte</h3>\n          <div className=\"arrows\">\n            <Button onClick={() => props.handlerSortDateToUp()} variant=\"contained\">\n              <ImArrowUp className=\"up-arrow\" size=\"1rem\"/>\n            </Button>\n            <Button onClick={() => props.handlerSortDateToDown()}variant=\"contained\">\n              <ImArrowDown className=\"down-arrow\" size=\"1rem\"/>\n            </Button>\n          </div>\n        </div>\n    </div>\n  );\n}\n","import './pages.css';\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nexport default function Pages({handlerPageChange, amountOfPages}) {\n  return (\n    <Pagination \n      onChange={handlerPageChange}\n      count={amountOfPages}\n    />\n  )\n}","//imports\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport DeleteSelected from \"./components/DeleteSelected/DeleteSelected\";\nimport Filtering from \"./components/Filtering/Filtering\";\nimport InputField from \"./components/InputField/InputField\";\nimport ListBlock from \"./components/ListBlock/ListBlock\";\nimport Sorting from \"./components/Sorting/Sorting\";\nimport Pages from \"./components/Pages/Pages\";\nimport { Snackbar } from \"@material-ui/core\";\nimport \"./ToDoList.css\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport default function ToDoList() {\n  const [inputText, setInputText] = useState(\"\");\n  const [editInput, setEditInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  //const [todoId, setTodoId] = useState(0);\n  const [filteredTodos, setFilteredTodos] = useState([...todos]);\n  const [status, setStatus] = useState(\"all\");\n  const [inputVisible, setInputVisible] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [currPage, setCurrPage] = useState(1);\n  const [amountOfPages, setAmountOfPages] = useState(1);\n  const [sortTrigger, setSortTrigger] = useState(\"asc\");\n  const [errMessage, setErrMessage] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n\n  const API_URL = process.env.REACT_APP_BASE_URL;\n  const API_URL_GET = process.env.REACT_APP_GET_URL;\n\n  const handlerInputText = (e) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value.trim() === \"\") {\n        alert(\"Write some task...\");\n      } else {\n        e.preventDefault();\n        handlerSubmitTodo(e);\n        setInputText(\"\");\n        e.target.value = \"\";\n      }\n    } else {\n      setInputText(e.target.value);\n    }\n  };\n\n  const handlerEditText = (e, index) => {\n    if (e.key === \"Enter\") {\n      if (e.target.value.trim() === \"\") {\n        alert(\"Write some task...\");\n      } else {\n        e.preventDefault();\n        setEditInput(\"\");\n        handleChangeItemText(e, index);\n        e.target.value = \"\";\n      }\n    } else {\n      setEditInput(e.target.value);\n    }\n  };\n\n  const handlerEscapeEdition = (e, index) => {\n    if (e.key === \"Escape\") {\n      let updatedTodos = [...todos];\n      e.preventDefault();\n      setEditInput(inputText);\n      const element = updatedTodos.find((e) => e.id === index);\n      const prevElement = todos.find((e) => e.id === index);\n      element.text = prevElement.text;\n      element.isEditing = false;\n    }\n  };\n\n  const handlerSubmitTodo = (e) => {\n    async function postItemRequest() {\n      //try {\n      console.log(\"posted\");\n      const todo = { name: inputText, done: false };\n      const res = await axios.post(API_URL + \"/task\", todo);\n      getItem();\n      //} catch (error) {\n      //handlerErrors(error);\n      //}\n    }\n    postItemRequest();\n  };\n\n  async function getItem() {\n    const { data } = await axios.get(API_URL_GET, {\n      params: {\n        order: sortTrigger,\n        filterBy: status,\n        page: currPage,\n      },\n    });\n    setTodos(\n      data.rows.map((item, index) => ({\n        id: index,\n        text: item.name,\n        completed: item.done,\n        date: item.createdAt,\n        uuid: item.id,\n        isEditing: item.isEditing,\n      }))\n    );\n  }\n\n  const handlerSetEmptiness = () => {\n    if (todos.length === 0) {\n      setIsEmpty(true);\n    } else if (todos !== 0) {\n      setIsEmpty(false);\n    }\n  };\n\n  const handlerSortDateToUp = () => {\n    setSortTrigger(\"asc\");\n    getItem();\n  };\n\n  const handlerSortDateToDown = () => {\n    setSortTrigger(\"desc\");\n    getItem();\n  };\n\n  const handleChangeItemText = (e, index) => {\n    const editingItem = todos.find((e) => e.id === index);\n\n    editItemRequest(editingItem, editInput);\n\n    editingItem.isEditing = false;\n\n    getItem();\n  };\n\n  async function editItemRequest(item, itemName) {\n    //try {\n    await axios.patch(API_URL + \"/task/\" + item.uuid, {\n      name: itemName,\n    });\n    //} catch (error) {\n    //handlerErrors(error);\n    //}\n  }\n\n  const handlerCheckingCheckBox = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find((e) => e.id === index);\n    completedTodo.completed = e.target.checked;\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerDeleteItem = (e, index) => {\n    const deletingItem = todos.find((e) => e.id === index);\n\n    async function deleteItem() {\n      const element = await axios.delete(\n        API_URL + \"/task/\" + deletingItem.uuid\n      );\n      getItem();\n    }\n\n    deleteItem();\n  };\n\n  const handlerDeleteAllItems = () => {\n    setTodos([]);\n  };\n\n  const handlerDeleteAllServerItems = () => {\n    //try {\n    for (let i = 0; i < todos.length; i++) {\n      const deletingItem = todos.find((e) => e.id === i);\n\n      async function deleteItem() {\n        const element = await axios.delete(\n          API_URL + \"/task/\" + deletingItem.uuid\n        );\n        getItem();\n      }\n      deleteItem();\n    }\n    // } catch (error) {\n    //handlerErrors(error);\n    //}\n  };\n\n  const handlerDeleteSelectedItems = (e) => {\n    e.preventDefault();\n    let updatedTodos = [...todos];\n    updatedTodos = updatedTodos.filter((e) => e.completed === false);\n    setTodos([...updatedTodos]);\n  };\n\n  const handlerFilterTodos = (status, page) => {\n    const cPage = page - 1;\n    switch (status) {\n      case \"all\":\n        setFilteredTodos([...todos.slice(cPage * 5, cPage * 5 + 5)]);\n        setStatus(\"all\");\n\n        break;\n      case \"done\":\n        setFilteredTodos([\n          ...todos\n            .filter((e) => e.completed === true)\n            .slice(cPage * 5, cPage * 5 + 5),\n        ]);\n        setStatus(\"done\");\n        handlerFilterTodos();\n\n        break;\n      case \"undone\":\n        setFilteredTodos([\n          ...todos\n            .filter((e) => e.completed === false)\n            .slice(cPage * 5, cPage * 5 + 5),\n        ]);\n        setStatus(\"undone\");\n        handlerFilterTodos();\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handlerCheckIsEditing = (e, index) => {\n    let updatedTodos = [...todos];\n    const completedTodo = updatedTodos.find((e) => e.id === index);\n    completedTodo.isEditing = true;\n    setTodos([...updatedTodos]);\n    setInputVisible(true);\n  };\n\n  const handlerPageCounter = (stat) => {\n    switch (stat) {\n      case \"all\":\n        setAmountOfPages(Math.ceil(todos.length / 5));\n        break;\n      case \"done\":\n        setAmountOfPages(\n          Math.ceil(todos.filter((e) => e.completed === true).length / 5)\n        );\n        break;\n      case \"undone\":\n        setAmountOfPages(\n          Math.ceil(todos.filter((e) => e.completed === false).length / 5)\n        );\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handlerPageChange = (e, page) => {\n    setCurrPage(page);\n  };\n\n  axios.interceptors.response.use(\n    (response) => {\n      // Do something before request is sent\\\n      return response;\n    },\n    (error) => {\n      if (error.response) {\n        setErrMessage(error.message);\n        console.log(error.message);\n        setIsError(true);\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n    //saveLocalTodos();\n  }, [todos, status]);\n\n  useEffect(() => {\n    handlerSetEmptiness();\n    handlerPageCounter(status);\n  }, [todos]);\n\n  useEffect(() => {\n    getItem();\n  }, []);\n\n  // useEffect(() => {\n  //   setIsError(true);\n  // }, [errMessage]);\n\n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n  }, [currPage]);\n\n  useEffect(() => {\n    handlerFilterTodos(status, currPage);\n    setCurrPage(1);\n  }, [status]);\n\n  useEffect(() => {});\n\n  useEffect(() => {\n    handlerPageCounter(status);\n  }, [status, todos]);\n\n  return (\n    <section className=\"main-section\">\n      <h1>ToDo</h1>\n      <InputField handlerInputText={handlerInputText} inputText={inputText} />\n      {!isEmpty ? (\n        <div className=\"wrapper\">\n          <Filtering setStatus={setStatus} />\n          <Sorting\n            handlerSortDateToUp={handlerSortDateToUp}\n            handlerSortDateToDown={handlerSortDateToDown}\n          />\n        </div>\n      ) : null}\n\n      <ListBlock\n        handlerEscapeEdition={handlerEscapeEdition}\n        handlerCheckIsEditing={handlerCheckIsEditing}\n        handlerCheckingCheckBox={handlerCheckingCheckBox}\n        handlerDeleteItem={handlerDeleteItem}\n        filteredTodos={filteredTodos}\n        inputVisible={inputVisible}\n        handlerEditText={handlerEditText}\n        handleChangeItemText={handleChangeItemText}\n      />\n\n      {!isEmpty ? (\n        <Pages\n          handlerPageCounter={handlerPageCounter}\n          handlerPageChange={handlerPageChange}\n          amountOfPages={amountOfPages}\n        />\n      ) : null}\n\n      {!isEmpty ? (\n        <div className=\"delete-main-section\">\n          <DeleteSelected\n            handlerDeleteAllServerItems={handlerDeleteAllServerItems}\n            handlerDeleteAllItems={handlerDeleteAllItems}\n            handlerDeleteSelectedItems={handlerDeleteSelectedItems}\n          />\n        </div>\n      ) : null}\n\n      {isError ? (\n        <Snackbar\n          open={isError}\n          onClose={() => setIsError(false)}\n          autoHideDuration={5000}\n        >\n          <Alert onClose={() => setIsError(false)} severity=\"error\">\n            {errMessage}\n          </Alert>\n        </Snackbar>\n      ) : null}\n    </section>\n  );\n}\n","\nimport ToDoList from './ToDoList';\n\nexport default function App() {  \n  return (\n    <div className=\"App\">\n       <ToDoList/>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}